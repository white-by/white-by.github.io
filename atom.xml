<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>whiteby&#39;s blog</title>
  <icon>https://www.gravatar.com/avatar/564a9f81bcedb4c43676fde79586935d</icon>
  <subtitle>中山大学大二在读女大学生</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2024-12-04T02:28:33.872Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>whiteby</name>
    <email>2115182149@qq.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Shoot大作业</title>
    <link href="http://example.com/2024/11/29/Shoot%E5%A4%A7%E4%BD%9C%E4%B8%9A/"/>
    <id>http://example.com/2024/11/29/Shoot%E5%A4%A7%E4%BD%9C%E4%B8%9A/</id>
    <published>2024-11-28T16:00:00.000Z</published>
    <updated>2024-12-04T02:28:33.872Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>这是一个由 Unity 从制作的第一人称射箭游戏。</p><span id="more"></span><br><h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><div style="text-align: center; margin: 20px 0;">  <iframe src="//player.bilibili.com/player.html?isOutside=true&aid=113565461644649&bvid=BV1FSzzYnEt9&cid=27090617213&p=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="width: 100%; max-width: 720px; height: 405px;">  </iframe></div><br><h2 id="得分详解"><a href="#得分详解" class="headerlink" title="得分详解"></a>得分详解</h2><ul><li><p>已实现</p><ul><li><p>游戏场景（14分）</p><ul><li>地形（2分）：使用<strong>地形组件</strong>，上面有<strong>山、路、草、树</strong>；（可使用第三方资源改造）</li></ul><img src="https://i.meee.com.tw/8B4wVp3.png" alt="1" style="zoom:67%;">  <ul><li><p>天空盒（2分）：使用<strong>天空盒</strong>，天空可随 玩家位置 或 时间变化 或 按特定按键<strong>切换天空盒</strong>；</p></li><li><p>按左Shift切换天空盒</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ChangeSkyBox</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> Material[] mats;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">int</span> index=<span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 获取Directional Light组件</span></span><br><span class="line">    <span class="keyword">private</span> Light directionalLight;</span><br><span class="line">    <span class="keyword">public</span> Gradient lightColorGradient;</span><br><span class="line">    <span class="keyword">public</span> AnimationCurve lightIntensityCurve;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Start is called before the first frame update</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        mats = Resources.LoadAll&lt;Material&gt;(<span class="string">&quot;Materials/skyboxs&quot;</span>);</span><br><span class="line">        RenderSettings.skybox = mats[<span class="number">0</span>];</span><br><span class="line">        index ++;</span><br><span class="line">        directionalLight = GameObject.Find(<span class="string">&quot;Directional Light&quot;</span>).GetComponent&lt;Light&gt;();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update is called once per frame</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(Input.GetKeyDown(KeyCode.LeftShift))&#123;</span><br><span class="line">            ChangeBox();</span><br><span class="line">        &#125;</span><br><span class="line">        ChangeLight();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ChangeBox</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        RenderSettings.skybox = mats[index];</span><br><span class="line">        index++;</span><br><span class="line">        index %= mats.Length;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ChangeLight</span>()</span>&#123;</span><br><span class="line">        <span class="built_in">float</span> currentTime = index*<span class="number">6f</span>;</span><br><span class="line">        <span class="comment">// 计算当前的光强度</span></span><br><span class="line">        <span class="built_in">float</span> intensity = lightIntensityCurve.Evaluate(currentTime);</span><br><span class="line">        <span class="comment">// 计算当前的光颜色</span></span><br><span class="line">        Color color = lightColorGradient.Evaluate(currentTime / <span class="number">24f</span>);</span><br><span class="line">        <span class="comment">// 设置光源的方向（模拟太阳的移动）</span></span><br><span class="line">        <span class="built_in">float</span> rotationAngle = (currentTime - <span class="number">5f</span>) * <span class="number">15f</span>; <span class="comment">// 每小时15度</span></span><br><span class="line">        directionalLight.transform.rotation = Quaternion.Euler(rotationAngle, <span class="number">-85f</span>, <span class="number">0f</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置光源的强度和颜色</span></span><br><span class="line">        <span class="comment">// directionalLight.intensity = intensity;</span></span><br><span class="line">        directionalLight.color = color;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>固定靶（2分）：使用<strong>静态物体</strong>，有一个以上固定的靶标；（注：射中后状态不会变化）</p></li><li><p>5个固定靶，其中4个是复制的</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// FirstController.cs</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">LoadSource</span>()</span>&#123;</span><br><span class="line">    loadTargets = <span class="keyword">new</span> LoadTargets[<span class="number">4</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">int</span> scale=<span class="number">50</span>;</span><br><span class="line">        <span class="keyword">if</span>(i==<span class="number">2</span>)</span><br><span class="line">            scale = <span class="number">80</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(i==<span class="number">3</span>)</span><br><span class="line">            scale = <span class="number">70</span>;</span><br><span class="line">        loadTargets[i] = <span class="keyword">new</span> LoadTargets();</span><br><span class="line">        loadTargets[i].CreateFixedTarget(ObjectPosition.fixedT[i],ObjectPosition.fixedTr[i],scale);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// LoadTargets.cs</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">LoadTargets</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    FixedTarget ftargetmodel;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">CreateFixedTarget</span>(<span class="params">Vector3 position,Quaternion rotation ,<span class="built_in">int</span> scale</span>)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (ftargetmodel != <span class="literal">null</span>) &#123;</span><br><span class="line">            Object.Destroy(ftargetmodel.fixedTarget);</span><br><span class="line">        &#125;</span><br><span class="line">        ftargetmodel = <span class="keyword">new</span> FixedTarget(position, rotation, scale);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FixedTarget <span class="title">GetFixedTModel</span>()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ftargetmodel;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>运动靶（2分）：使用<strong>动画运动</strong>，有一个以上运动靶标，运动轨迹，速度使用动画控制；（注：射中后需要有效果或自然落下）</p><ul><li><p>三个移动靶，运动方式分别为水平、上下、圆周运动</p><img src="https://i.meee.com.tw/ZCTa5vS.png" alt="1" style="zoom:80%;"><img src="https://i.meee.com.tw/v8EUJ2i.png" alt="1" style="zoom:80%;"></li></ul></li><li><p>射击位（2分）：地图上应标记若干射击位，仅在射击位附近或区域可以拉弓射击，每个位置有 n 次机会；</p></li><li><p>在移动靶和固定靶前面均有一块射击台</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ShootArea</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//是否可以射箭</span></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">bool</span> canShoot;</span><br><span class="line">    <span class="keyword">public</span> FirstController firstController;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span>&#123;</span><br><span class="line">        firstController = (FirstController)Director.getInstance().currentSceneController;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnTriggerEnter</span>(<span class="params">Collider collider</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (collider.gameObject.tag == <span class="string">&quot;Player&quot;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            canShoot = <span class="literal">true</span>;</span><br><span class="line">            firstController.AreaCallBack(canShoot);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnTriggerExit</span>(<span class="params">Collider collider</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (collider.gameObject.tag == <span class="string">&quot;Player&quot;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            canShoot = <span class="literal">false</span>;</span><br><span class="line">            firstController.AreaCallBack(canShoot);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>摄像机（2分）：使用<strong>多摄像机</strong>，制作 鸟瞰图 或 瞄准镜图 使得游戏更加易于操控；</p></li><li><p>制作了一台俯瞰视角的跟随摄影机，固定在屏幕右上角</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">UIFollowCamera</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> Camera mainCamera; <span class="comment">// 主摄像机</span></span><br><span class="line">    <span class="keyword">public</span> Vector3 offset = <span class="keyword">new</span> Vector3(<span class="number">-0</span>, <span class="number">-0</span>, <span class="number">0</span>); <span class="comment">// RawImage 在屏幕上的偏移量</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> RectTransform uiTransform;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 获取 RawImage 的 RectTransform</span></span><br><span class="line">        uiTransform = GetComponent&lt;RectTransform&gt;();</span><br><span class="line">        <span class="keyword">if</span> (mainCamera == <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            mainCamera = Camera.main; <span class="comment">// 自动获取主摄像机</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 获取主摄像机的屏幕右上角位置</span></span><br><span class="line">        Vector3 screenPosition = mainCamera.ViewportToScreenPoint(<span class="keyword">new</span> Vector3(<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>)); <span class="comment">// 右上角</span></span><br><span class="line">        uiTransform.position = screenPosition + offset;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>跟随玩家</li></ul><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">OverheadFollowCamera</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> Transform player; <span class="comment">// 玩家对象</span></span><br><span class="line">    <span class="keyword">public</span> Vector3 offset = <span class="keyword">new</span> Vector3(<span class="number">0</span>, <span class="number">10</span>, <span class="number">-10</span>); <span class="comment">// 摄像机相对于玩家的偏移</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> followSpeed = <span class="number">5f</span>; <span class="comment">// 跟随平滑速度</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">LateUpdate</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (player == <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            Debug.LogWarning(<span class="string">&quot;Player 未绑定！&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 计算摄像机目标位置</span></span><br><span class="line">        Vector3 targetPosition = player.position + offset;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 平滑移动摄像机</span></span><br><span class="line">        transform.position = Vector3.Lerp(transform.position, targetPosition, followSpeed * Time.deltaTime);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 始终让摄像机朝向玩家</span></span><br><span class="line">        transform.LookAt(player);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>声音（2分）：使用<strong>声音组件</strong>，播放背景音 与 箭射出的声效；</p></li><li><p>有循环的bgm以及射击音效</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">AudioController</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">SerializeField</span>] AudioSource BgmAudio;</span><br><span class="line">    [<span class="meta">SerializeField</span>] AudioSource SfxAudio;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> AudioClip bgm;</span><br><span class="line">    <span class="keyword">public</span> AudioClip shoot;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        BgmAudio.clip = bgm;</span><br><span class="line">        BgmAudio.Play();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">PlaySfx</span>(<span class="params">AudioClip clip</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        SfxAudio.PlayOneShot(clip);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>运动与物理与动画（8分）</p><ul><li><p>游走（2分）：使用<strong>第一人称组件</strong>，玩家的驽弓可在地图上游走，不能碰上树和靶标等障碍；（注：建议使用 <a href="https://assetstore.unity.com/packages/essentials/starter-assets-firstperson-updates-in-new-charactercontroller-pa-196525">unity 官方案例</a>）</p><ul><li><p>具体效果请看视频演示</p><img src="https://i.meee.com.tw/DrvUjpM.png" alt="1"><img src="https://i.meee.com.tw/nTznzJf.png" alt="1" style="zoom: 67%;"><ul><li><p>按Space跳跃功能</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// PlayerController.cs</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerController</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> CharacterController cc;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> moveSpeed = <span class="number">80.0f</span>;   <span class="comment">// 移动速度</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> jumpSpeed = <span class="number">20.0f</span>;   <span class="comment">// 跳跃初速度</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> gravity = <span class="number">20.0f</span>;     <span class="comment">// 重力加速度</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> fallMultiplier = <span class="number">2.5f</span>; <span class="comment">// 加强下落加速度的倍数</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">float</span> horizontalMove, verticalMove;</span><br><span class="line">    <span class="keyword">private</span> Vector3 dir;</span><br><span class="line">    <span class="keyword">private</span> Vector3 velocity;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Transform groundCheck;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> checkRedius = <span class="number">0.2f</span>;</span><br><span class="line">    <span class="keyword">public</span> LayerMask groundLayer;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">bool</span> isGround;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        cc = GetComponent&lt;CharacterController&gt;();</span><br><span class="line">        Cursor.lockState = CursorLockMode.Locked;</span><br><span class="line">        Cursor.visible = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        isGround = Physics.CheckSphere(groundCheck.position, checkRedius, groundLayer);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (isGround &amp;&amp; velocity.y &lt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            velocity.y = <span class="number">-2f</span>;  <span class="comment">// 确保贴地</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        horizontalMove = Input.GetAxis(<span class="string">&quot;Horizontal&quot;</span>) * moveSpeed;</span><br><span class="line">        verticalMove = Input.GetAxis(<span class="string">&quot;Vertical&quot;</span>) * moveSpeed;</span><br><span class="line"></span><br><span class="line">        dir = transform.forward * verticalMove + transform.right * horizontalMove;</span><br><span class="line">        cc.Move(dir * Time.deltaTime);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.Space) &amp;&amp; isGround)</span><br><span class="line">        &#123;</span><br><span class="line">            velocity.y = jumpSpeed;  <span class="comment">// 初始跳跃速度</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 重力处理</span></span><br><span class="line">        <span class="keyword">if</span> (velocity.y &lt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            velocity.y -= gravity * fallMultiplier * Time.deltaTime;  <span class="comment">// 更快地下落</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            velocity.y -= gravity * Time.deltaTime;  <span class="comment">// 正常的上升重力</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        cc.Move(velocity * Time.deltaTime);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnDrawGizmos</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Gizmos.color = Color.red;</span><br><span class="line">        Gizmos.DrawWireSphere(groundCheck.position, checkRedius);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><p>射击效果（2分）：使用 <strong>物理引擎</strong> 或 <strong>动画</strong> 或 <strong>粒子</strong>，运动靶被射中后产生适当效果。</p></li><li><p>具体效果请看视频演示</p></li><li><p>射中后箭会留在靶上，没射中会掉在地上被风吹走</p><img src="https://i.meee.com.tw/rCquJvn.png" alt="1" style="zoom:80%;"></li><li><p>箭的物理效果</p><img src="https://i.meee.com.tw/hIxMvnp.png" style="zoom:80%;"></li><li><p>引入power模拟射击效果</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ShootCallback</span>(<span class="params"><span class="built_in">bool</span> isShot, <span class="built_in">float</span> power</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    shotpower = power;</span><br><span class="line">    shot = isShot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 长按左键不断增加力量</span></span><br><span class="line"><span class="keyword">if</span> (isMouseLongPressed &amp;&amp; !isHolding)</span><br><span class="line">&#123;</span><br><span class="line">    power = Mathf.Min(power + Time.deltaTime, <span class="number">1f</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>碰撞与计分（2分）：使用 <strong>计分类</strong> 管理规则，在射击位射中靶标得相应分数，规则自定；（注：应具有现场修改游戏规则能力）</p></li><li><p>具体效果请看视频演示</p></li><li><p>靶子分为low、mid、high三个积分区域，分数由边缘到中心依次为2、4、6分</p></li><li><p>计分类</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ScoreRecorder</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">int</span> score;</span><br><span class="line">    <span class="keyword">public</span> FirstController firstController;</span><br><span class="line">    <span class="keyword">public</span> UserGUI userGUI;</span><br><span class="line">    <span class="comment">// Start is called before the first frame update</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        firstController = (FirstController)Director.getInstance().currentSceneController;</span><br><span class="line">        firstController.scoreController = <span class="keyword">this</span>;</span><br><span class="line">        userGUI = <span class="keyword">this</span>.gameObject.GetComponent&lt;UserGUI&gt;();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Record</span>(<span class="params"><span class="built_in">int</span> ringscore</span>)</span> &#123;</span><br><span class="line">        score += ringscore;</span><br><span class="line">        userGUI.score = score;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>驽弓动画（2分）：使用 <strong>动画机</strong> 与 <strong>动画融合</strong>, 实现十字驽蓄力<strong>半拉弓</strong>，然后 <strong>hold</strong>，择机 <strong>shoot</strong>；</p></li><li><p>具体效果请看视频演示</p><img src="https://i.meee.com.tw/ZGIIYBi.png" style="zoom:80%;"><img src="https://i.meee.com.tw/HKVCXuj.png" style="zoom:80%;"></li><li><p>半拉弓</p><img src="https://i.meee.com.tw/wBXLjN1.png" style="zoom:80%;"><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ShootControl</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> Animator animator;</span><br><span class="line">    <span class="keyword">public</span> FirstController firstController;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> power = <span class="number">0.4f</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">bool</span> isHolding = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">bool</span> isMouseDown;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">bool</span> isMouseLongPressed;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">float</span> longPressDuration = <span class="number">0.2f</span>; <span class="comment">// 长按的初始持续时间</span></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">float</span> maxChargeTime = <span class="number">1f</span>; <span class="comment">// 最大充能时间（1秒）</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 引入 AudioController</span></span><br><span class="line">    <span class="keyword">public</span> AudioController audioController;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        animator = GetComponent&lt;Animator&gt;();</span><br><span class="line">        firstController = (FirstController)Director.getInstance().currentSceneController;</span><br><span class="line">        audioController = GameObject.FindGameObjectWithTag(<span class="string">&quot;Audio&quot;</span>).GetComponent&lt;AudioController&gt;();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 长按左键时逐渐增加力量，直到充满</span></span><br><span class="line">        <span class="keyword">if</span> (isMouseLongPressed &amp;&amp; !isHolding)</span><br><span class="line">        &#123;</span><br><span class="line">            power = Mathf.Min(power + Time.deltaTime / maxChargeTime, <span class="number">1f</span>); <span class="comment">// 限制充能最大值为 1</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        animator.SetFloat(<span class="string">&quot;power&quot;</span>, power);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (firstController.GetArea() &amp;&amp; firstController.arrowNum &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            ClickCheck();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ClickCheck</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 按下左键</span></span><br><span class="line">        <span class="keyword">if</span> (Input.GetMouseButtonDown(<span class="number">0</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (!isHolding)</span><br><span class="line">            &#123;</span><br><span class="line">                isMouseDown = <span class="literal">true</span>;</span><br><span class="line">                isMouseLongPressed = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 开始协程检测长按</span></span><br><span class="line">                StartCoroutine(CheckLongPress());</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 触发start</span></span><br><span class="line">                animator.SetFloat(<span class="string">&quot;power&quot;</span>, power);</span><br><span class="line">                animator.SetTrigger(<span class="string">&quot;start&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                ShootAnimator();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (isMouseLongPressed &amp;&amp; Input.GetMouseButtonDown(<span class="number">1</span>)) <span class="comment">// 右键按下</span></span><br><span class="line">        &#123;</span><br><span class="line">            isHolding = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 停止协程</span></span><br><span class="line">            StopCoroutine(CheckLongPress());</span><br><span class="line">            isMouseLongPressed = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">            animator.SetFloat(<span class="string">&quot;hold power&quot;</span>, power);</span><br><span class="line">            animator.SetTrigger(<span class="string">&quot;hold&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 松开左键</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (isMouseDown &amp;&amp; Input.GetMouseButtonUp(<span class="number">0</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            isMouseDown = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (!isHolding)</span><br><span class="line">            &#123;</span><br><span class="line">                isMouseLongPressed = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 停止协程</span></span><br><span class="line">                StopCoroutine(CheckLongPress());</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 触发hold</span></span><br><span class="line">                animator.SetFloat(<span class="string">&quot;hold power&quot;</span>, power);</span><br><span class="line">                animator.SetTrigger(<span class="string">&quot;hold&quot;</span>);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 触发shoot</span></span><br><span class="line">                ShootAnimator();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> IEnumerator <span class="title">CheckLongPress</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">yield</span> <span class="keyword">return</span> <span class="keyword">new</span> <span class="title">WaitForSeconds</span>(<span class="params">longPressDuration</span>)</span>;</span><br><span class="line">        <span class="comment">// 如果鼠标处于按下状态，则表示长按</span></span><br><span class="line">        <span class="keyword">if</span> (isMouseDown)</span><br><span class="line">        &#123;</span><br><span class="line">            isMouseLongPressed = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ShootAnimator</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        animator.SetTrigger(<span class="string">&quot;shoot&quot;</span>);</span><br><span class="line">        firstController.ShootCallback(<span class="literal">true</span>, power);</span><br><span class="line">        isHolding = <span class="literal">false</span>;</span><br><span class="line">        power = <span class="number">0.4f</span>; <span class="comment">// 重置力量为初始值</span></span><br><span class="line">        audioController.PlaySfx(audioController.shoot);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul></li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h2&gt;&lt;p&gt;这是一个由 Unity 从制作的第一人称射箭游戏。&lt;/p&gt;</summary>
    
    
    
    
    <category term="SYSU" scheme="http://example.com/tags/SYSU/"/>
    
  </entry>
  
  <entry>
    <title>hw4_HitUFO</title>
    <link href="http://example.com/2024/11/08/hw4_HitUFO/"/>
    <id>http://example.com/2024/11/08/hw4_HitUFO/</id>
    <published>2024-11-07T16:00:00.000Z</published>
    <updated>2024-11-14T07:06:00.952Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>这是一个由 Unity 制作的，采用工厂模式和MVC结构的游戏：鼠标打飞碟 Hit UFO。</p><span id="more"></span><br><h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><p>演示视频链接 -&gt; <a href>unity作业：鼠标打飞碟 Hit UFO</a></p><div style="text-align: center; margin: 20px 0;">  <iframe src="//player.bilibili.com/player.html?isOutside=true&aid=113447098388312&bvid=BV116DoYzEqy&cid=26670925149&p=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="width: 100%; max-width: 720px; height: 405px;">  </iframe></div><br><h2 id="uml图"><a href="#uml图" class="headerlink" title="uml图"></a>uml图</h2><img src="https://i.meee.com.tw/FBv0iKQ.png" alt="t" style="zoom: 75%;"><br><h2 id="游戏截图"><a href="#游戏截图" class="headerlink" title="游戏截图"></a>游戏截图</h2><p>游戏开始界面：</p><img src="https://i.meee.com.tw/lTi1asD.png" alt="t" style="zoom: 50%;"><p>游戏运行界面：</p><img src="https://i.meee.com.tw/MBkY6Ha.png" alt="t" style="zoom:50%;"><br><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><p>以下仅挑选了核心部分代码讲解。</p><h3 id="飞碟的创建（DiskFactory飞碟仓库）"><a href="#飞碟的创建（DiskFactory飞碟仓库）" class="headerlink" title="飞碟的创建（DiskFactory飞碟仓库）"></a>飞碟的创建（DiskFactory飞碟仓库）</h3><ol><li><p>为了更好地模拟现实生活，此处添加了物理系统反应，给飞碟加上重力，使得飞碟可以自然地做弧线运动（更具体的飞碟运动实现请看<code>CCFlyAction</code>）；但是为了游戏体验关闭了弹开反应，只是让飞碟们相互错开。</p></li><li><p>飞碟仓库在代码中是通过一个名为 <code>free</code> 和 <code>used</code> 的列表来实现的。</p><ol><li>free 列表：存放已经销毁但可以复用的飞碟对象。这些飞碟在游戏中已经不再使用，但没有被销毁，而是保存在池中以便下次直接复用。</li><li>used 列表：存放当前正在使用的飞碟对象，即那些在场景中活跃的飞碟。</li></ol></li><li><p>如果缓冲池为空：如果 <code>free</code> 列表为空（即没有可复用的飞碟），则通过 <code>GameObject.Instantiate</code> 创建一个新的飞碟对象，并进行初始化。这个新飞碟会添加必要的组件（如 <code>DiskAttri</code>, <code>Collider</code>, <code>Rigidbody</code> 等）以及设置属性。</p></li><li><p>飞碟回收：每当飞碟被击中并销毁时，通常会被移除 <code>used</code> 列表并添加回 <code>free</code> 列表，以便下次复用。</p></li></ol><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> GameObject <span class="title">GetDisk</span>(<span class="params"><span class="built_in">int</span> round</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    GameObject disk;</span><br><span class="line">    <span class="keyword">if</span> (free.Count != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        disk = free[<span class="number">0</span>];</span><br><span class="line">        free.Remove(disk);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        disk = GameObject.Instantiate(Resources.Load(<span class="string">&quot;Prefabs/disk&quot;</span>, <span class="keyword">typeof</span>(GameObject))) <span class="keyword">as</span> GameObject;</span><br><span class="line">        disk.AddComponent&lt;DiskAttri&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 添加Collider</span></span><br><span class="line">        <span class="keyword">var</span> collider = disk.AddComponent&lt;SphereCollider&gt;();</span><br><span class="line">        collider.isTrigger = <span class="literal">true</span>; <span class="comment">// 使用触发器，避免弹开</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 添加Rigidbody</span></span><br><span class="line">        <span class="keyword">var</span> rigidbody = disk.AddComponent&lt;Rigidbody&gt;();</span><br><span class="line">        rigidbody.isKinematic = <span class="literal">true</span>; <span class="comment">// 禁用物理反应（不弹开）</span></span><br><span class="line">        rigidbody.useGravity = <span class="literal">false</span>; <span class="comment">// 启用重力</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据不同round设置diskAttributes的值</span></span><br><span class="line">    disk.transform.localEulerAngles = <span class="keyword">new</span> Vector3(-rand.Next(<span class="number">20</span>, <span class="number">40</span>), <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    DiskAttri attri = disk.GetComponent&lt;DiskAttri&gt;();</span><br><span class="line">    attri.score = rand.Next(<span class="number">1</span>, <span class="number">4</span>);</span><br><span class="line">    <span class="comment">// 由分数来决定速度、颜色、大小</span></span><br><span class="line">    attri.speedX = (rand.Next(<span class="number">1</span>, <span class="number">5</span>) + attri.score + round) * <span class="number">0.2f</span>;</span><br><span class="line">    attri.speedY = (rand.Next(<span class="number">1</span>, <span class="number">5</span>) + attri.score + round) * <span class="number">0.2f</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (attri.score == <span class="number">3</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        disk.GetComponent&lt;Renderer&gt;().material.color = Color.red;</span><br><span class="line">        disk.transform.localScale += <span class="keyword">new</span> Vector3(<span class="number">-0.5f</span>, <span class="number">0</span>, <span class="number">-0.5f</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (attri.score == <span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        disk.GetComponent&lt;Renderer&gt;().material.color = Color.green;</span><br><span class="line">        disk.transform.localScale += <span class="keyword">new</span> Vector3(<span class="number">-0.2f</span>, <span class="number">0</span>, <span class="number">-0.2f</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (attri.score == <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        disk.GetComponent&lt;Renderer&gt;().material.color = Color.blue;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 飞碟可从两个方向飞入（左上和右上）</span></span><br><span class="line">    <span class="built_in">int</span> direction = rand.Next(<span class="number">1</span>, <span class="number">3</span>);</span><br><span class="line">    Vector3 startPosition;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (direction == <span class="number">1</span>)</span><br><span class="line">    &#123;   <span class="comment">// 左上</span></span><br><span class="line">        startPosition = Camera.main.ScreenToWorldPoint(<span class="keyword">new</span> Vector3(rand.Next(<span class="number">-100</span>, <span class="number">100</span>), Camera.main.pixelHeight + rand.Next(<span class="number">-100</span>, <span class="number">100</span>), <span class="number">8</span>));</span><br><span class="line">        attri.speedY *= <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;  <span class="comment">// 右上</span></span><br><span class="line">        startPosition = Camera.main.ScreenToWorldPoint(<span class="keyword">new</span> Vector3(Camera.main.pixelWidth - rand.Next(<span class="number">-100</span>, <span class="number">100</span>), Camera.main.pixelHeight + rand.Next(<span class="number">-100</span>, <span class="number">100</span>), <span class="number">8</span>));</span><br><span class="line">        attri.speedX *= <span class="number">-1</span>;</span><br><span class="line">        attri.speedY *= <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置飞碟的起始位置</span></span><br><span class="line">    disk.transform.position = <span class="keyword">new</span> Vector3(startPosition.x, startPosition.y, disk.transform.position.z);</span><br><span class="line"></span><br><span class="line">    used.Add(disk);</span><br><span class="line">    disk.SetActive(<span class="literal">true</span>);</span><br><span class="line">    <span class="keyword">return</span> disk;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="飞行控制"><a href="#飞行控制" class="headerlink" title="飞行控制"></a>飞行控制</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">CCFlyAction</span> : <span class="title">SSAction</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> speedX;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> speedY;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> CCFlyAction <span class="title">GetSSAction</span>(<span class="params"><span class="built_in">float</span> x, <span class="built_in">float</span> y</span>)</span> &#123;</span><br><span class="line">        CCFlyAction action = ScriptableObject.CreateInstance&lt;CCFlyAction&gt;();</span><br><span class="line">        action.speedX = x;</span><br><span class="line">        action.speedY = y;</span><br><span class="line">        <span class="keyword">return</span> action;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// Start is called before the first frame update</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update is called once per frame</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.transform.gameObject.activeSelf == <span class="literal">false</span>) &#123;    <span class="comment">//飞碟已经被&quot;销毁&quot;</span></span><br><span class="line">            <span class="keyword">this</span>.destroy = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">this</span>.callback.SSActionEvent(<span class="keyword">this</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        Vector3 vec3 = Camera.main.WorldToScreenPoint (<span class="keyword">this</span>.transform.position);</span><br><span class="line">        <span class="keyword">if</span> (vec3.x &lt; <span class="number">-100</span> || vec3.x &gt; Camera.main.pixelWidth + <span class="number">100</span> || vec3.y &lt; <span class="number">-100</span> || vec3.y &gt; Camera.main.pixelHeight + <span class="number">100</span>) &#123;</span><br><span class="line">            <span class="keyword">this</span>.destroy = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">this</span>.callback.SSActionEvent(<span class="keyword">this</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        transform.position += <span class="keyword">new</span> Vector3(speedX, speedY, <span class="number">0</span>) * Time.deltaTime * <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="游戏进程管理"><a href="#游戏进程管理" class="headerlink" title="游戏进程管理"></a>游戏进程管理</h3><h4 id="记分员ScoreRecorder的实现思路及其必要性"><a href="#记分员ScoreRecorder的实现思路及其必要性" class="headerlink" title="记分员ScoreRecorder的实现思路及其必要性"></a>记分员<code>ScoreRecorder</code>的实现思路及其必要性</h4><h5 id="实现思路"><a href="#实现思路" class="headerlink" title="实现思路"></a>实现思路</h5><p><code>ScoreRecorder</code> 负责记录和更新游戏中的得分。它的核心任务是接收并记录击中的飞碟的分数，以及提供方法来获取和显示当前的得分。通过封装得分逻辑，可以将得分管理和游戏其他逻辑（如飞碟的运动、界面显示等）解耦，使得得分的修改、重置和查询变得更加集中和简洁。</p><h4 id="ScoreRecorder-主要功能"><a href="#ScoreRecorder-主要功能" class="headerlink" title="ScoreRecorder 主要功能"></a><strong>ScoreRecorder 主要功能</strong></h4><ol><li>记录得分： 每当飞碟被击中时，<code>ScoreRecorder</code> 负责根据飞碟的属性（如 <code>score</code>）增加相应的分数。</li><li>获取当前得分： 提供方法来查询当前的得分，以便在 UI 中显示得分信息，或者在游戏结束时显示最终得分。</li><li>重置得分： 游戏开始时，或者每轮开始时，需要重置得分。这个方法确保每轮的得分不会累积到下一轮。</li></ol><h5 id="必要性分析"><a href="#必要性分析" class="headerlink" title="必要性分析"></a>必要性分析</h5><ol><li><p>单一职责</p></li><li><p>将得分逻辑封装在 <code>ScoreRecorder</code> 类中符合<strong>单一职责原则</strong>（SRP）。这意味着每个类应该仅负责一项功能，而得分是游戏中的一项独立功能，不应与其他游戏逻辑（如飞碟的生成、飞行等）混合。</p><p>例如，如果将得分逻辑直接放入 <code>RoundController</code> 类中，每当得分相关的功能发生变化时，我们需要修改 <code>RoundController</code>。这种做法会使得 <code>RoundController</code> 变得臃肿，难以维护。将得分逻辑提取到 <code>ScoreRecorder</code> 类后，<code>RoundController</code> 的代码就可以专注于控制游戏流程，而不必关注具体的得分实现。</p></li><li><p>模块化和复用性</p><ol><li><p>通过将得分记录功能单独模块化，<code>ScoreRecorder</code> 可以在多个场景或不同的游戏模式中重复使用。如果将游戏的得分逻辑和其他功能分开，在未来的修改或扩展中，只需要更新 <code>ScoreRecorder</code> 类中的代码，而不需要影响到其他类。</p><p>比如，将来增加了新的飞碟类型，每个飞碟的分数、速度和颜色可能有所不同。只需要修改 <code>DiskAttri</code> 类的属性，<code>ScoreRecorder</code> 类就能自动适应新的得分机制，而 <code>RoundController</code> 和 <code>UserGUI</code> 类不需要做任何改动。</p></li></ol></li><li><p>游戏逻辑的清晰性</p><ol><li><p><code>ScoreRecorder</code> 提供了清晰的 API，使得得分逻辑的修改和访问变得直观。当其他类需要修改得分时，只需要调用 <code>ScoreRecorder</code> 提供的接口（如 <code>Record</code> 和 <code>GetScore</code>），这减少了直接操作数据的复杂性。</p><p>例如，<code>RoundController</code> 类通过 <code>scoreController.Record(hit.transform.gameObject)</code> 来更新得分，这让 <code>RoundController</code> 的代码更简洁，并清楚地表明这是一个得分更新的动作。</p></li><li><p>便于扩展<br>  1. 将得分功能集中在一个类中，未来可以更方便地扩展相关功能。例如可以：</p><ul><li>添加排行榜功能，记录历史最高得分。</li><li>根据得分设置不同的游戏奖励或解锁机制。</li></ul></li><li><p>减少代码耦合<br>  1. <code>ScoreRecorder</code> 解耦了得分管理和其他游戏逻辑（如飞碟的生成和控制）。这种分离不仅让代码更加模块化，也让其他组件（如 UI、控制器）能够更加独立地进行开发和修改。</p></li></ol></li></ol><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">RoundController</span> : <span class="title">MonoBehaviour</span>, <span class="title">ISceneController</span>, <span class="title">IUserAction</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">int</span> round = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">int</span> max_round = <span class="number">5</span>;</span><br><span class="line">    <span class="built_in">float</span> timer = <span class="number">0.5f</span>;</span><br><span class="line">    GameObject disk;</span><br><span class="line">    DiskFactory factory ;</span><br><span class="line">    <span class="keyword">public</span> CCActionManager actionManager;</span><br><span class="line">    <span class="keyword">public</span> ScoreRecorder scoreController;</span><br><span class="line">    <span class="keyword">public</span> UserGUI userGUI;</span><br><span class="line">    <span class="comment">// Start is called before the first frame update</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update is called once per frame</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (userGUI.mode == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        GetHit();</span><br><span class="line">        gameOver();</span><br><span class="line">        <span class="keyword">if</span> (round &gt; max_round) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        timer -= Time.deltaTime;</span><br><span class="line">        <span class="keyword">if</span> (timer &lt;= <span class="number">0</span> &amp;&amp; actionManager.RemainActionCount() == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">//从工厂中得到10个飞碟，为其加上动作</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; ++i) &#123;</span><br><span class="line">                disk = factory.GetDisk(round);</span><br><span class="line">                actionManager.MoveDisk(disk);</span><br><span class="line">            &#125;</span><br><span class="line">            round += <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (round &lt;= max_round) &#123;</span><br><span class="line">                userGUI.round = round;</span><br><span class="line">            &#125;</span><br><span class="line">            timer = <span class="number">4.0f</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Awake</span>()</span> &#123;</span><br><span class="line">        Director director = Director.getInstance();</span><br><span class="line">        director.currentSceneController = <span class="keyword">this</span>;</span><br><span class="line">        director.currentSceneController.LoadSource();</span><br><span class="line">        gameObject.AddComponent&lt;UserGUI&gt;();</span><br><span class="line">        gameObject.AddComponent&lt;CCActionManager&gt;();</span><br><span class="line">        gameObject.AddComponent&lt;ScoreRecorder&gt;();</span><br><span class="line">        gameObject.AddComponent&lt;DiskFactory&gt;();</span><br><span class="line">        factory = Singleton&lt;DiskFactory&gt;.Instance;</span><br><span class="line">        userGUI = gameObject.GetComponent&lt;UserGUI&gt;();</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">LoadSource</span>()</span> </span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">gameOver</span>()</span> </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (round &gt; max_round &amp;&amp; actionManager.RemainActionCount() == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">int</span> score = userGUI.score;</span><br><span class="line">            userGUI.gameMessage = <span class="string">&quot;游戏结束！:)\n您的分数为: &quot;</span>+score;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">GetHit</span>()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (Input.GetButtonDown(<span class="string">&quot;Fire1&quot;</span>)) &#123;</span><br><span class="line"><span class="comment">//create ray, origin is camera, and direction to mousepoint</span></span><br><span class="line">Camera ca = Camera.main;</span><br><span class="line">Ray ray = ca.ScreenPointToRay(Input.mousePosition);</span><br><span class="line"></span><br><span class="line"><span class="comment">//Return the ray&#x27;s hit</span></span><br><span class="line">RaycastHit hit;</span><br><span class="line"><span class="keyword">if</span> (Physics.Raycast(ray, <span class="keyword">out</span> hit)) &#123;</span><br><span class="line">                scoreController.Record(hit.transform.gameObject);</span><br><span class="line">                </span><br><span class="line">                hit.transform.gameObject.SetActive(<span class="literal">false</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="界面UI"><a href="#界面UI" class="headerlink" title="界面UI"></a>界面UI</h3><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">UserGUI</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> mode;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> score;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> round;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> gameMessage;</span><br><span class="line">    <span class="keyword">private</span> IUserAction action;</span><br><span class="line">    <span class="keyword">public</span> GUIStyle bigStyle, blackStyle, smallStyle;<span class="comment">//自定义字体格式</span></span><br><span class="line">    <span class="keyword">public</span> Font pixelFont;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">int</span> menu_width = Screen.width / <span class="number">5</span>, menu_height = Screen.width / <span class="number">10</span>;<span class="comment">//主菜单每一个按键的宽度和高度</span></span><br><span class="line">    <span class="comment">// Start is called before the first frame update</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        mode = <span class="number">0</span>;</span><br><span class="line">        gameMessage = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        action = Director.getInstance().currentSceneController <span class="keyword">as</span> IUserAction;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//大字体初始化</span></span><br><span class="line">        bigStyle = <span class="keyword">new</span> GUIStyle();</span><br><span class="line">        bigStyle.normal.textColor = Color.black;</span><br><span class="line">        bigStyle.normal.background = <span class="literal">null</span>;</span><br><span class="line">        bigStyle.fontSize = <span class="number">50</span>;</span><br><span class="line">        bigStyle.alignment=TextAnchor.MiddleCenter;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//black</span></span><br><span class="line">        blackStyle = <span class="keyword">new</span> GUIStyle();</span><br><span class="line">        blackStyle.normal.textColor = Color.black;</span><br><span class="line">        blackStyle.normal.background = <span class="literal">null</span>;</span><br><span class="line">        blackStyle.fontSize = <span class="number">50</span>;</span><br><span class="line">        blackStyle.alignment=TextAnchor.MiddleCenter;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//小字体初始化</span></span><br><span class="line">        smallStyle = <span class="keyword">new</span> GUIStyle();</span><br><span class="line">        smallStyle.normal.textColor = Color.white;</span><br><span class="line">        smallStyle.normal.background = <span class="literal">null</span>;</span><br><span class="line">        smallStyle.fontSize = <span class="number">20</span>;</span><br><span class="line">        smallStyle.alignment=TextAnchor.MiddleCenter;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update is called once per frame</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">OnGUI</span>()</span> &#123;</span><br><span class="line">        <span class="comment">//GUI.skin.button.font = pixelFont;</span></span><br><span class="line">        GUI.skin.button.fontSize = <span class="number">35</span>;</span><br><span class="line">        <span class="keyword">switch</span>(mode) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                mainMenu();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                GameStart();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;       </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">mainMenu</span>()</span> &#123;</span><br><span class="line">        GUI.Label(<span class="keyword">new</span> Rect(Screen.width / <span class="number">2</span> - menu_width * <span class="number">0.5f</span>, Screen.height * <span class="number">0.1f</span>, menu_width, menu_height), <span class="string">&quot;Hit UFO\n鼠标打飞碟&quot;</span>, bigStyle);</span><br><span class="line">        <span class="built_in">bool</span> button = GUI.Button(<span class="keyword">new</span> Rect(Screen.width / <span class="number">2</span> - menu_width * <span class="number">0.5f</span>, Screen.height * <span class="number">3</span> / <span class="number">7</span>, menu_width, menu_height), <span class="string">&quot;游戏开始&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (button) &#123;</span><br><span class="line">            mode = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">GameStart</span>()</span> &#123;</span><br><span class="line">        GUI.Label(<span class="keyword">new</span> Rect(<span class="number">450</span>, <span class="number">60</span>, <span class="number">50</span>, <span class="number">200</span>), gameMessage, bigStyle);</span><br><span class="line">        GUI.Label(<span class="keyword">new</span> Rect(<span class="number">50</span>,<span class="number">20</span>,<span class="number">100</span>,<span class="number">50</span>), <span class="string">&quot;得分: &quot;</span> + score, smallStyle);</span><br><span class="line">        GUI.Label(<span class="keyword">new</span> Rect(<span class="number">800</span>,<span class="number">20</span>,<span class="number">100</span>,<span class="number">50</span>), <span class="string">&quot;轮次: &quot;</span> + round, smallStyle);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h2&gt;&lt;p&gt;这是一个由 Unity 制作的，采用工厂模式和MVC结构的游戏：鼠标打飞碟 Hit UFO。&lt;/p&gt;</summary>
    
    
    
    
    <category term="SYSU" scheme="http://example.com/tags/SYSU/"/>
    
  </entry>
  
  <entry>
    <title>hw3_PriestsAndDevils</title>
    <link href="http://example.com/2024/10/18/hw3_PriestsAndDevils/"/>
    <id>http://example.com/2024/10/18/hw3_PriestsAndDevils/</id>
    <published>2024-10-17T16:00:00.000Z</published>
    <updated>2024-10-18T12:02:53.619Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>这是一个由 Unity 制作的，采用动作分离模式的游戏：牧师与魔鬼 Priests And Devils。</p><span id="more"></span><br><h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><p>演示视频链接 -&gt; <a href="https://www.bilibili.com/video/BV1QLy3YqEef/">unity作业：牧师与魔鬼 Priests And Devils</a></p><div style="text-align: center; margin: 20px 0;">  <iframe src="//player.bilibili.com/player.html?isOutside=true&aid=113326973520432&bvid=BV1QLy3YqEef&cid=26344032257&p=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="width: 100%; max-width: 720px; height: 405px;">  </iframe></div><br><h2 id="uml图"><a href="#uml图" class="headerlink" title="uml图"></a>uml图</h2><img src="https://meee.com.tw/Yd5GH6T.png" alt="t" style="zoom: 70%;"><br><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="动作回调函数接口（ISSActionCallback）"><a href="#动作回调函数接口（ISSActionCallback）" class="headerlink" title="动作回调函数接口（ISSActionCallback）"></a>动作回调函数接口（ISSActionCallback）</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">enum</span> SSActionEventType:<span class="built_in">int</span> &#123;Started, Completed&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title">ISSActionCallback</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//回调函数</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">SSActionEvent</span>(<span class="params">SSAction source,</span></span></span><br><span class="line"><span class="params"><span class="function">        SSActionEventType events = SSActionEventType.Completed,</span></span></span><br><span class="line"><span class="params"><span class="function">        <span class="built_in">int</span> intParam = <span class="number">0</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">        <span class="built_in">string</span> strParam = <span class="literal">null</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">        Object objectParam = <span class="literal">null</span></span>)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="动作基类（SSAction）"><a href="#动作基类（SSAction）" class="headerlink" title="动作基类（SSAction）"></a>动作基类（SSAction）</h3><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SSAction</span> : <span class="title">ScriptableObject</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">bool</span> enable = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">bool</span> destroy = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> GameObject gameObject &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> Transform transform &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> ISSActionCallback callback &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="title">SSAction</span>()</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Start is called before the first frame update</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> System.NotImplementedException();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update is called once per frame</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> System.NotImplementedException();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="组合移动动作子类（CCSequenceAction）"><a href="#组合移动动作子类（CCSequenceAction）" class="headerlink" title="组合移动动作子类（CCSequenceAction）"></a>组合移动动作子类（CCSequenceAction）</h3><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">CCSequenceAction</span> : <span class="title">SSAction</span>, <span class="title">ISSActionCallback</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//动作序列</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;SSAction&gt; sequence;</span><br><span class="line">    <span class="comment">//重复次数</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> repeat = <span class="number">-1</span>;</span><br><span class="line">    <span class="comment">//动作开始指针</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> start = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//生产函数</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> CCSequenceAction <span class="title">GetSSAction</span>(<span class="params"><span class="built_in">int</span> repeat, <span class="built_in">int</span> start, List&lt;SSAction&gt; sequence</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        CCSequenceAction action = ScriptableObject.CreateInstance&lt;CCSequenceAction&gt;();</span><br><span class="line">        action.repeat = repeat;</span><br><span class="line">        action.start = start;</span><br><span class="line">        action.sequence = sequence;</span><br><span class="line">        <span class="keyword">return</span> action;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//对序列中的动作进行初始化</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">foreach</span> (SSAction action <span class="keyword">in</span> sequence)</span><br><span class="line">        &#123;</span><br><span class="line">            action.gameObject = <span class="keyword">this</span>.gameObject;</span><br><span class="line">            action.transform = <span class="keyword">this</span>.transform;</span><br><span class="line">            action.callback = <span class="keyword">this</span>;</span><br><span class="line">            action.Start();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//运行序列中的动作</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (sequence.Count == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">if</span> (start &lt; sequence.Count)</span><br><span class="line">        &#123;</span><br><span class="line">            sequence[start].Update();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//回调处理，当有动作完成时触发</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SSActionEvent</span>(<span class="params">SSAction source,</span></span></span><br><span class="line"><span class="params"><span class="function">        SSActionEventType events = SSActionEventType.Completed,</span></span></span><br><span class="line"><span class="params"><span class="function">        <span class="built_in">int</span> Param = <span class="number">0</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">        <span class="built_in">string</span> strParam = <span class="literal">null</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">        Object objectParam = <span class="literal">null</span></span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        source.destroy = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">this</span>.start++;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.start &gt;= sequence.Count)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">this</span>.start = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span> (repeat &gt; <span class="number">0</span>)</span><br><span class="line">                repeat--;</span><br><span class="line">            <span class="keyword">if</span> (repeat == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">this</span>.destroy = <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">this</span>.callback.SSActionEvent(<span class="keyword">this</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">OnDestroy</span>()</span> &#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="动作管理基类（SSActionManager）"><a href="#动作管理基类（SSActionManager）" class="headerlink" title="动作管理基类（SSActionManager）"></a>动作管理基类（SSActionManager）</h3><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SSActionManager</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//动作集，以字典形式存在</span></span><br><span class="line">    <span class="keyword">private</span> Dictionary&lt;<span class="built_in">int</span>, SSAction&gt; actions = <span class="keyword">new</span> Dictionary&lt;<span class="built_in">int</span>, SSAction&gt;();</span><br><span class="line">    <span class="comment">//等待被加入的动作队列(动作即将开始)</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;SSAction&gt; waitingAdd = <span class="keyword">new</span> List&lt;SSAction&gt;();</span><br><span class="line">    <span class="comment">//等待被删除的动作队列(动作已完成)</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;<span class="built_in">int</span>&gt; waitingDelete = <span class="keyword">new</span> List&lt;<span class="built_in">int</span>&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//将waitingAdd中的动作保存</span></span><br><span class="line">        <span class="keyword">foreach</span> (SSAction ac <span class="keyword">in</span> waitingAdd)</span><br><span class="line">            actions[ac.GetInstanceID()] = ac;</span><br><span class="line">        waitingAdd.Clear();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//运行被保存的事件</span></span><br><span class="line">        <span class="keyword">foreach</span> (KeyValuePair&lt;<span class="built_in">int</span>, SSAction&gt; kv <span class="keyword">in</span> actions)</span><br><span class="line">        &#123;</span><br><span class="line">            SSAction ac = kv.Value;</span><br><span class="line">            <span class="keyword">if</span> (ac.destroy)</span><br><span class="line">            &#123;</span><br><span class="line">                waitingDelete.Add(ac.GetInstanceID());</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span> (ac.enable)</span><br><span class="line">            &#123;</span><br><span class="line">                ac.Update();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//销毁waitingDelete中的动作</span></span><br><span class="line">        <span class="keyword">foreach</span> (<span class="built_in">int</span> key <span class="keyword">in</span> waitingDelete)</span><br><span class="line">        &#123;</span><br><span class="line">            SSAction ac = actions[key];</span><br><span class="line">            actions.Remove(key);</span><br><span class="line">            Destroy(ac);</span><br><span class="line">        &#125;</span><br><span class="line">        waitingDelete.Clear();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//准备运行一个动作，将动作初始化，并加入到waitingAdd</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">RunAction</span>(<span class="params">GameObject gameObject, SSAction action, ISSActionCallback manager</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        action.gameObject = gameObject;</span><br><span class="line">        action.transform = gameObject.transform;</span><br><span class="line">        action.callback = manager;</span><br><span class="line">        waitingAdd.Add(action);</span><br><span class="line">        action.Start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Start is called before the first frame update</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">Start</span>()</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="本游戏项目的动作管理类（CCActionManager）"><a href="#本游戏项目的动作管理类（CCActionManager）" class="headerlink" title="本游戏项目的动作管理类（CCActionManager）"></a>本游戏项目的动作管理类（CCActionManager）</h3><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">CCActionManager</span> : <span class="title">SSActionManager</span>, <span class="title">ISSActionCallback</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//是否正在运动</span></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">bool</span> isMoving = <span class="literal">false</span>;</span><br><span class="line">    <span class="comment">//船移动动作类</span></span><br><span class="line">    <span class="keyword">public</span> CCMoveToAction moveBoatAction;</span><br><span class="line">    <span class="comment">//人移动动作类(需要组合)</span></span><br><span class="line">    <span class="keyword">public</span> CCSequenceAction moveRoleAction;</span><br><span class="line">    <span class="comment">//控制器</span></span><br><span class="line">    <span class="keyword">public</span> FirstController controller;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">new</span> <span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        controller = (FirstController)Director.GetInstance().CurrentSceneController;</span><br><span class="line">        controller.actionManager = <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="built_in">bool</span> <span class="title">IsMoving</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> isMoving;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//移动船</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">MoveBoat</span>(<span class="params">GameObject boat, Vector3 target, <span class="built_in">float</span> speed</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (isMoving)</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        isMoving = <span class="literal">true</span>;</span><br><span class="line">        moveBoatAction = CCMoveToAction.GetSSAction(target, speed);</span><br><span class="line">        <span class="keyword">this</span>.RunAction(boat, moveBoatAction, <span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//移动人</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">MoveRole</span>(<span class="params">GameObject role, Vector3 mid_destination, Vector3 destination, <span class="built_in">int</span> speed</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (isMoving)</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        isMoving = <span class="literal">true</span>;</span><br><span class="line">        moveRoleAction = CCSequenceAction.GetSSAction(<span class="number">0</span>, <span class="number">0</span>, <span class="keyword">new</span> List&lt;SSAction&gt; &#123; CCMoveToAction.GetSSAction(mid_destination, speed), CCMoveToAction.GetSSAction(destination, speed) &#125;);</span><br><span class="line">        <span class="keyword">this</span>.RunAction(role, moveRoleAction, <span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//回调函数</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SSActionEvent</span>(<span class="params">SSAction source,</span></span></span><br><span class="line"><span class="params"><span class="function">    SSActionEventType events = SSActionEventType.Completed,</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="built_in">int</span> intParam = <span class="number">0</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="built_in">string</span> strParam = <span class="literal">null</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">    Object objectParam = <span class="literal">null</span></span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        isMoving = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="裁判类（JudgeController）"><a href="#裁判类（JudgeController）" class="headerlink" title="裁判类（JudgeController）"></a>裁判类（JudgeController）</h3><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">JudgeController</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> FirstController mainController;</span><br><span class="line">    <span class="keyword">public</span> Shore leftShoreModel;</span><br><span class="line">    <span class="keyword">public</span> Shore rightShoreModel;</span><br><span class="line">    <span class="keyword">public</span> Boat boatModel;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// Start is called before the first frame update</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        mainController = (FirstController)Director.GetInstance().CurrentSceneController;</span><br><span class="line">        <span class="keyword">this</span>.leftShoreModel = mainController.leftShoreController.GetShore();</span><br><span class="line">        <span class="keyword">this</span>.rightShoreModel = mainController.rightShoreController.GetShore();</span><br><span class="line">        <span class="keyword">this</span>.boatModel = mainController.boatController.GetBoatModel();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update is called once per frame</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!mainController.isRunning)</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">if</span> (mainController.time &lt;= <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            mainController.JudgeCallback(<span class="literal">false</span>, <span class="string">&quot;Game Over!&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">this</span>.gameObject.GetComponent&lt;UserGUI&gt;().gameMessage = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="comment">//判断是否已经胜利</span></span><br><span class="line">        <span class="keyword">if</span> (rightShoreModel.pastorCount == <span class="number">3</span> &amp;&amp; leftShoreModel.devilCount == <span class="number">3</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            mainController.JudgeCallback(<span class="literal">false</span>, <span class="string">&quot;You Win!&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            </span><br><span class="line">            <span class="built_in">int</span> leftPastorNum, leftDevilNum, rightPastorNum, rightDevilNum;</span><br><span class="line">            leftPastorNum = leftShoreModel.pastorCount + (boatModel.isRight ? <span class="number">0</span> : boatModel.pastorCount);</span><br><span class="line">            leftDevilNum = leftShoreModel.devilCount + (boatModel.isRight ? <span class="number">0</span> : boatModel.devilCount);</span><br><span class="line">            <span class="keyword">if</span> (leftPastorNum != <span class="number">0</span> &amp;&amp; leftPastorNum &lt; leftDevilNum)</span><br><span class="line">            &#123;</span><br><span class="line">                mainController.JudgeCallback(<span class="literal">false</span>, <span class="string">&quot;Game Over!&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            rightPastorNum = rightShoreModel.pastorCount + (boatModel.isRight ? boatModel.pastorCount : <span class="number">0</span>);</span><br><span class="line">            rightDevilNum = rightShoreModel.devilCount + (boatModel.isRight ? boatModel.devilCount : <span class="number">0</span>);</span><br><span class="line">            <span class="keyword">if</span> (rightPastorNum != <span class="number">0</span> &amp;&amp; rightPastorNum &lt; rightDevilNum)</span><br><span class="line">            &#123;</span><br><span class="line">                mainController.JudgeCallback(<span class="literal">false</span>, <span class="string">&quot;Game Over!&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h2&gt;&lt;p&gt;这是一个由 Unity 制作的，采用动作分离模式的游戏：牧师与魔鬼 Priests And Devils。&lt;/p&gt;</summary>
    
    
    
    
    <category term="SYSU" scheme="http://example.com/tags/SYSU/"/>
    
  </entry>
  
  <entry>
    <title>hw2_SimpleCalculator</title>
    <link href="http://example.com/2024/09/29/hw2_SimpleCalculator/"/>
    <id>http://example.com/2024/09/29/hw2_SimpleCalculator/</id>
    <published>2024-09-28T16:00:00.000Z</published>
    <updated>2024-09-29T03:45:57.857Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>这是一个由 Unity 从制作的简易计算器。</p><span id="more"></span><br><h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><p>演示视频链接 -&gt; <a href="https://www.bilibili.com/video/BV1Wjx6eyEor/?vd_source=33e6dae72e8734d733f973f5e84004b0">unity作业：简易计算器SimpleCalculator</a></p><div style="text-align: center; margin: 20px 0;">  <iframe src="//player.bilibili.com/player.html?isOutside=true&aid=113218206828649&bvid=BV1Wjx6eyEor&cid=26053511692&p=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="width: 100%; max-width: 720px; height: 405px;">  </iframe></div><br><h2 id="简答题"><a href="#简答题" class="headerlink" title="简答题"></a>简答题</h2><p><strong>游戏对象（GameObjects） 和 资源（Assets）的区别与联系：</strong></p><ul><li><strong>游戏对象 (GameObjects)：</strong> 游戏对象是场景中存在的实体，它们具有位置、旋转和缩放属性，主要通过 <code>Transform</code> 组件管理。游戏对象是可以在场景中被实例化的对象，它们往往通过组件（<code>Component</code>）来赋予功能，如物理特性、行为脚本等。</li><li><strong>资源 (Assets)：</strong> 资源是指构成游戏世界的文件，如模型、纹理、音频、脚本等，它们存储在 <code>Assets</code> 文件夹下。资源本身不能直接用于游戏，需要通过被关联到游戏对象上使用。</li><li><strong>联系：</strong> 游戏对象往往由资源组成。例如，一个 3D 模型文件（Asset）会被挂载到一个 <code>GameObject</code> 上，成为场景中的可视对象。资源也可以通过预制体（Prefab）被实例化为游戏对象。</li></ul><p><strong>资源与对象组织结构总结：</strong></p><ul><li>下载不同的游戏项目后，常见的资源组织结构包括以下：<ul><li><strong>Assets 文件夹</strong> 中的资源分类可能为 <code>Models</code>, <code>Textures</code>, <code>Materials</code>, <code>Scripts</code> 等，便于管理。</li><li>游戏对象树结构（Hierarchy）按场景逻辑组织，通常包括根节点下的多个子对象。例如，一个 “Character” 对象下可以挂载 “Head”, “Body”, “Arm” 等子对象。</li></ul></li></ul><p><strong>验证 MonoBehaviour 基本行为或事件的代码示例：</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MonoBehaviourTest</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Awake</span>()</span> &#123;</span><br><span class="line">        Debug.Log(<span class="string">&quot;Awake called&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span> &#123;</span><br><span class="line">        Debug.Log(<span class="string">&quot;Start called&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span> &#123;</span><br><span class="line">        Debug.Log(<span class="string">&quot;Update called&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">FixedUpdate</span>()</span> &#123;</span><br><span class="line">        Debug.Log(<span class="string">&quot;FixedUpdate called&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">LateUpdate</span>()</span> &#123;</span><br><span class="line">        Debug.Log(<span class="string">&quot;LateUpdate called&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">OnGUI</span>()</span> &#123;</span><br><span class="line">        Debug.Log(<span class="string">&quot;OnGUI called&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">OnEnable</span>()</span> &#123;</span><br><span class="line">        Debug.Log(<span class="string">&quot;OnEnable called&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">OnDisable</span>()</span> &#123;</span><br><span class="line">        Debug.Log(<span class="string">&quot;OnDisable called&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>GameObject，Transform，Component 对象的官方描述翻译：</strong></p><ul><li><strong>GameObject：</strong> GameObject 是 Unity 场景中所有实体的基本构建块。它们不一定有视觉表现或物理属性，但可以通过添加组件获得不同的功能。</li><li><strong>Transform：</strong> Transform 是每个 GameObject 自带的组件，负责物体在 3D 空间中的位置、旋转和缩放。它定义了对象的坐标系。</li><li><strong>Component：</strong> Component 是所有行为的基础，任何功能（如渲染、物理）都通过附加到 GameObject 的组件来实现。</li></ul><p><strong>table 对象的属性：</strong></p><ul><li><strong>table 的 GameObject：</strong> 包含基本的 activeSelf 属性，用于控制对象是否激活。</li><li><strong>Transform 属性：</strong> 位置、旋转、缩放（<code>Position</code>, <code>Rotation</code>, <code>Scale</code>）。</li><li><strong>table 的组件：</strong> 可能包含 <code>MeshRenderer</code>, <code>Collider</code>, <code>Rigidbody</code> 等组件，定义了外观、碰撞检测和物理行为。</li></ul><p><strong>资源预设（Prefabs）与 对象克隆 (clone)：</strong></p><ul><li><strong>预设的好处：</strong> 预设允许你创建一个模板对象，该对象可以在多个场景中重复使用并保持一致。它还可以加速开发和节省内存。</li><li><strong>预设与对象克隆的关系：</strong> 预设是一个资源，它可以通过 <code>Instantiate()</code> 方法克隆成游戏对象。克隆的对象具有与预设相同的属性和组件。</li></ul><p><strong>代码示例：实例化 table 预制资源：</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">TableSpawner</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> GameObject tablePrefab;  <span class="comment">// 预制资源</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 实例化 table 预制体</span></span><br><span class="line">        Instantiate(tablePrefab, <span class="keyword">new</span> Vector3(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>), Quaternion.identity);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><br><h2 id="编程实践：简单计算器"><a href="#编程实践：简单计算器" class="headerlink" title="编程实践：简单计算器"></a>编程实践：简单计算器</h2><ol><li>运行效果：</li></ol><img src="https://meee.com.tw/9yZcGvk.png" alt="t" style="zoom: 67%;"><ol start="2"><li><p>代码实现：</p><ol><li><p>Model</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Entities and their states / Model</span></span><br><span class="line"><span class="keyword">private</span> <span class="built_in">string</span> input = <span class="string">&quot;&quot;</span>; <span class="comment">// 用户输入</span></span><br><span class="line"><span class="keyword">private</span> <span class="built_in">float</span> result = <span class="number">0</span>;  <span class="comment">// 计算结果</span></span><br><span class="line"><span class="keyword">private</span> <span class="built_in">string</span> operation = <span class="string">&quot;&quot;</span>; <span class="comment">// 当前操作</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>System Handlers</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// System Handlers</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OnGUI</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 获取屏幕尺寸</span></span><br><span class="line">    <span class="built_in">float</span> screenWidth = Screen.width;</span><br><span class="line">    <span class="built_in">float</span> screenHeight = Screen.height;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 定义每个按钮和显示框的大小</span></span><br><span class="line">    <span class="built_in">float</span> boxWidth = <span class="number">300f</span>;</span><br><span class="line">    <span class="built_in">float</span> boxHeight = <span class="number">60f</span>;</span><br><span class="line">    <span class="built_in">float</span> buttonWidth = <span class="number">80f</span>;</span><br><span class="line">    <span class="built_in">float</span> buttonHeight = <span class="number">60f</span>;</span><br><span class="line">    <span class="built_in">float</span> spacing = <span class="number">10f</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 居中显示输入和结果框</span></span><br><span class="line">    GUI.Box(<span class="keyword">new</span> Rect((screenWidth - boxWidth) / <span class="number">2</span> + <span class="number">10</span>, screenHeight / <span class="number">2</span> - <span class="number">200</span>, boxWidth - <span class="number">40</span>, boxHeight),</span><br><span class="line">        input != <span class="string">&quot;&quot;</span> ? input : result.ToString());</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 布局数字按钮</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">9</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">float</span> xPos = (screenWidth - (<span class="number">3</span> * buttonWidth + <span class="number">2</span> * spacing)) / <span class="number">2</span> + ((i - <span class="number">1</span>) % <span class="number">3</span>) * (buttonWidth + spacing);</span><br><span class="line">        <span class="built_in">float</span> yPos = screenHeight / <span class="number">2</span> - <span class="number">100</span> + ((i - <span class="number">1</span>) / <span class="number">3</span>) * (buttonHeight + spacing);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (GUI.Button(<span class="keyword">new</span> Rect(xPos - <span class="number">10</span>, yPos, buttonWidth, buttonHeight), i.ToString()))</span><br><span class="line">        &#123;</span><br><span class="line">            input += i.ToString();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 单独布局 &quot;0&quot; 按钮</span></span><br><span class="line">    <span class="keyword">if</span> (GUI.Button(<span class="keyword">new</span> Rect((screenWidth - buttonWidth) / <span class="number">2</span> - <span class="number">10</span>, screenHeight / <span class="number">2</span> + <span class="number">110</span>, buttonWidth, buttonHeight), <span class="string">&quot;0&quot;</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        input += <span class="string">&quot;0&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 布局操作符按钮</span></span><br><span class="line">    <span class="built_in">string</span>[] operators = &#123; <span class="string">&quot;+&quot;</span>, <span class="string">&quot;-&quot;</span>, <span class="string">&quot;*&quot;</span>, <span class="string">&quot;/&quot;</span> &#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; operators.Length; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">float</span> xPos = (screenWidth - (<span class="number">3</span> * buttonWidth + <span class="number">2</span> * spacing)) / <span class="number">2</span> + <span class="number">3</span> * (buttonWidth + spacing);</span><br><span class="line">        <span class="built_in">float</span> yPos = screenHeight / <span class="number">2</span> - <span class="number">100</span> + i * (buttonHeight + spacing);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (GUI.Button(<span class="keyword">new</span> Rect(xPos, yPos, buttonWidth, buttonHeight), operators[i]))</span><br><span class="line">        &#123;</span><br><span class="line">            SetOperation(operators[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 布局 &quot;=&quot; 和 &quot;C&quot; 按钮</span></span><br><span class="line">    <span class="keyword">if</span> (GUI.Button(<span class="keyword">new</span> Rect((screenWidth - buttonWidth) / <span class="number">2</span> + buttonWidth + spacing - <span class="number">10</span>, screenHeight / <span class="number">2</span> + <span class="number">110</span>, buttonWidth, buttonHeight), <span class="string">&quot;=&quot;</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        Calculate();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (GUI.Button(<span class="keyword">new</span> Rect((screenWidth - buttonWidth) / <span class="number">2</span> - buttonWidth - spacing - <span class="number">10</span>, screenHeight / <span class="number">2</span> + <span class="number">110</span>, buttonWidth, buttonHeight), <span class="string">&quot;C&quot;</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        Clear();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>Components &#x2F;controls</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Components /controls</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SetOperation</span>(<span class="params"><span class="built_in">string</span> op</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (input != <span class="string">&quot;&quot;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        result = <span class="built_in">float</span>.Parse(input);</span><br><span class="line">        input = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    operation = op;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Calculate</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (input != <span class="string">&quot;&quot;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">float</span> second = <span class="built_in">float</span>.Parse(input);</span><br><span class="line">        <span class="keyword">switch</span> (operation)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;+&quot;</span>: result += second; <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;-&quot;</span>: result -= second; <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;*&quot;</span>: result *= second; <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;/&quot;</span>: result /= second; <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        input = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        operation = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Clear</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    input = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    result = <span class="number">0</span>;</span><br><span class="line">    operation = <span class="string">&quot;&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol></li></ol>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h2&gt;&lt;p&gt;这是一个由 Unity 从制作的简易计算器。&lt;/p&gt;</summary>
    
    
    
    
    <category term="SYSU" scheme="http://example.com/tags/SYSU/"/>
    
  </entry>
  
  <entry>
    <title>whiteby</title>
    <link href="http://example.com/2024/09/14/whiteby/"/>
    <id>http://example.com/2024/09/14/whiteby/</id>
    <published>2024-09-14T04:36:26.005Z</published>
    <updated>2024-12-07T12:00:26.429Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>你好，我是 Whiteby，欢迎来到我的 Blog!</p><span id="more"></span><h2 id="自我介绍"><a href="#自我介绍" class="headerlink" title="自我介绍"></a>自我介绍</h2><p>本人是中山大学软件工程 26 届的本科生，女生。</p><p>这个网站将会不定期记录我的日常生活or学习笔记。</p><p>喜欢玩单机游戏。</p><p>会去健身房锻炼。</p><h2 id="生活"><a href="#生活" class="headerlink" title="生活"></a>生活</h2><ul><li><p>动漫</p><ul><li>我是杂食党河豚，什么都看，什么都吃。<ul><li>一般向like：少歌、魔圆…</li><li>真百like：终将…</li></ul></li></ul></li><li><p>游戏</p><ul><li>pc（太多了数不过来）<ul><li>博德之门3、艾尔登法环 等3A游戏</li><li>hades、鬼泣5 等动作游戏</li><li>蛇之命、pentiment、逆转 等剧情向游戏</li></ul></li><li>ns<ul><li>塞尔达相关</li><li>马里奥相关</li></ul></li></ul></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;你好，我是 Whiteby，欢迎来到我的 Blog!&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>3D GAMES</title>
    <link href="http://example.com/2024/09/14/3DGames/"/>
    <id>http://example.com/2024/09/14/3DGames/</id>
    <published>2024-09-13T16:00:00.000Z</published>
    <updated>2024-11-08T11:34:22.002Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>目录：</p><p>hw1 -&gt;  <a href="https://white-by.github.io/2024/09/14/hw1_JUMP/#more">hw1_JUMP</a></p><p>hw2 -&gt; <a href="https://white-by.github.io/2024/09/29/hw2_SimpleCalculator/#more">hw2_SimpleCalculator</a></p><p>hw3 -&gt; <a href="https://white-by.github.io/2024/10/18/hw3_PriestsAndDevils/#more">hw3_PriestsAndDevils</a></p><p>hw4 -&gt; <a href="https://white-by.github.io/2024/11/08/hw4_HitUFO/#more">hw4_HitUFO</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="SYSU" scheme="http://example.com/tags/SYSU/"/>
    
  </entry>
  
  <entry>
    <title>hw1_JUMP</title>
    <link href="http://example.com/2024/09/14/hw1_JUMP/"/>
    <id>http://example.com/2024/09/14/hw1_JUMP/</id>
    <published>2024-09-13T16:00:00.000Z</published>
    <updated>2024-09-24T08:41:00.239Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="游戏介绍"><a href="#游戏介绍" class="headerlink" title="游戏介绍"></a>游戏介绍</h2><p>​JUMP 是一款 由 Construct3 从0开始制作的，2D 竖版平台跳跃游戏，玩家将扮演一名小骷髅人，一步一步跳跃，直至找到出路。</p><p>​游戏设置了普通台阶、易碎台阶、传送门以及跳跃穿透台阶。</p><p>​游戏体验：<a href="https://white-by.github.io/JUMP/">JUMP</a></p><p>​Construct3教程：<a href="https://white-by.github.io/tutorial_game/">教程游戏</a></p><span id="more"></span><h2 id="游玩演示"><a href="#游玩演示" class="headerlink" title="游玩演示"></a>游玩演示</h2><ol><li><p>通关演示</p><div style="padding: 62.50% 0 0 0; position: relative"><div style="height:100%;left:0;position:absolute;top:0;width:100%"><iframe height="70%" width="70%;" src="https://embed.wave.video/enbCbbGhVO7nEv3G" frameborder="0" allow="autoplay; fullscreen" scrolling="no"></iframe></div></div></li><li><p>失败演示</p><div style="padding: 62.50% 0 0 0; position: relative"><div style="height:100%;left:0;position:absolute;top:0;width:100%"><iframe height="70%" width="70%;" src="https://embed.wave.video/KcCrn94C5juKxpkd" frameborder="0" allow="autoplay; fullscreen" scrolling="no"></iframe></div></div></li></ol><h2 id="游戏制作"><a href="#游戏制作" class="headerlink" title="游戏制作"></a>游戏制作</h2><ol><li><p>易碎台阶</p><ol><li><p>具体制作</p><p>让主控角色触碰到易碎台阶时，摧毁台阶并加入音效。</p><p><img src="https://i.meee.com.tw/nKFssoN.png" alt="danger"></p></li><li><p>素材制作</p><p>为了让玩家区分出普通台阶和易碎台阶，在普通台阶上做部分挖空处理。</p></li></ol></li><li><p>传送门</p><ol><li><p>具体制作</p><p>让主控角色触碰到传送门时，移动到另一个传送门并加入音效。</p></li></ol></li><li><p>跳跃穿透台阶</p><ol><li><p>思路</p><p>为了让玩家意思到台阶可以从下往上跳跃，将普通台阶进行180°翻转，并将底部进行虚化处理，只保留上层清晰图片</p><p>普通台阶：</p><img src="https://i.meee.com.tw/GVLpVhe.png" alt="t" style="zoom:50%;"><p>跳跃穿透台阶：</p><img src="https://i.meee.com.tw/ZjJ7xV6.png" alt="tr" style="zoom:50%;"></li><li><p>具体制作</p><p>添加行为</p><p><img src="https://i.meee.com.tw/NxhdgZg.png" alt="1"></p></li></ol></li><li><p>场景切换</p><ol><li>新建场景，当主控角色触碰到当前场景的指定位置时，跳转到下一个需要场景。</li></ol></li></ol><h2 id="游戏玩家转变成创作者的一些碎碎念"><a href="#游戏玩家转变成创作者的一些碎碎念" class="headerlink" title="游戏玩家转变成创作者的一些碎碎念"></a>游戏玩家转变成创作者的一些碎碎念</h2><h3 id="游戏设计"><a href="#游戏设计" class="headerlink" title="游戏设计"></a>游戏设计</h3><ol><li><p>玩家体验为中心：设计游戏时，首先要考虑的是玩家的体验。思考你作为玩家时最喜欢和最不喜欢的元素，了解如何通过游戏机制、故事和视觉设计来增强玩家的沉浸感和满足感。</p></li><li><p>规则与挑战：游戏的核心在于规则和挑战。设计有趣的规则不仅要考虑游戏的平衡性，还要确保它们能激发玩家的兴趣和创造力。挑战应适度，既要让玩家感到有成就感，又要避免挫败感。</p></li><li><p>故事与世界构建：游戏不仅仅是玩法，还包括故事和环境的构建。思考如何通过叙事和美术设计，创造一个吸引人的游戏世界，让玩家愿意探索和投入。</p></li></ol><h3 id="题材选定"><a href="#题材选定" class="headerlink" title="题材选定"></a>题材选定</h3><p>​横板的平台跳跃游戏有太多经典作品，例如任天堂的马里奥，想着第一次做，做点不一样的，就想到了竖版，然后就联想到过去游玩的一款竖版平台跳跃游戏——JUMP KING。</p><p>​关于竖版的平台游戏比横板，个人认为在制作上存在优势，那就是指引。横板的平台游戏往往需要更多更明确的指引，例如在马里奥中，主角出生在屏幕左边，而右边会刷新出金币等奖励或是乌龟等敌人，目的就是为了引导玩家向右行走从而开始一关又一关的游玩；而竖版会很容易让人想到向上跳跃。</p><p>​但是竖版也有很致命的缺点，就是游玩丰富性与乐趣性，它不像横板游戏，它的视野和可活动空间是受限制的，横板游戏不管是从左向右还是从右到左进行游戏的展开都是很轻易的，只需要在画面的中间横着放一片地板即可；而竖版从上往下的探险却会给人不适感，因此大多数的跳跃游戏设计y轴上的从上到下的移动时，多是主角受重力影响“坠落”的cg画面。</p><h3 id="玩家指引"><a href="#玩家指引" class="headerlink" title="玩家指引"></a>玩家指引</h3><p>​目前的游戏里，游戏制作者对玩家的指引大致可分为两类。一是引入npc进行对话，此为文字说明；二是设计道路暗示玩家前进，此为画面表现。（当然如塞尔达之类的开放世界游戏不在讨论范围内）</p><p>​如果游戏里的文字指引过多，大多数的玩家们往往烦躁甚至会跳过，因此，画面的暗示是很重要的，例如在一个地牢中，玩家就会想到“离开地牢”；在一间有“门”的房间里，玩家很自然就会想到“门”就是离开房间的关键。</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;游戏介绍&quot;&gt;&lt;a href=&quot;#游戏介绍&quot; class=&quot;headerlink&quot; title=&quot;游戏介绍&quot;&gt;&lt;/a&gt;游戏介绍&lt;/h2&gt;&lt;p&gt;​	JUMP 是一款 由 Construct3 从0开始制作的，2D 竖版平台跳跃游戏，玩家将扮演一名小骷髅人，一步一步跳跃，直至找到出路。&lt;/p&gt;
&lt;p&gt;​	游戏设置了普通台阶、易碎台阶、传送门以及跳跃穿透台阶。&lt;/p&gt;
&lt;p&gt;​	游戏体验：&lt;a href=&quot;https://white-by.github.io/JUMP/&quot;&gt;JUMP&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;​	Construct3教程：&lt;a href=&quot;https://white-by.github.io/tutorial_game/&quot;&gt;教程游戏&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="SYSU" scheme="http://example.com/tags/SYSU/"/>
    
  </entry>
  
  <entry>
    <title>java核心技术卷1</title>
    <link href="http://example.com/2023/11/27/java%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF%E5%8D%B71/"/>
    <id>http://example.com/2023/11/27/java%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF%E5%8D%B71/</id>
    <published>2023-11-27T05:32:11.000Z</published>
    <updated>2024-09-14T04:13:42.223Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>java 核心技术卷 1 的学习笔记</p><span id="more"></span><h2 id="Ch4-对象和类"><a href="#Ch4-对象和类" class="headerlink" title="Ch4 对象和类"></a>Ch4 对象和类</h2><h3 id="4-3-用户自定义类"><a href="#4-3-用户自定义类" class="headerlink" title="4.3 用户自定义类"></a>4.3 用户自定义类</h3><ul><li>4.3.8 封装的优点 P112<ul><li>不要返回可变对象引用的访问器方法<ul><li>因为会导致引用同一对象，而破坏原属性的私有状态</li><li>先<strong>clone</strong>，再返回可变对象的引用</li></ul></li><li>final 字段<ul><li>1、final 修饰符对于 基本类型 或者不可变类<ul><li>类中所有⽅法都不会改变其对象，如 String 类的字段尤其有⽤</li></ul></li><li>2、对于可变的类<ul><li>使⽤ final 会造成混乱，final 关键字只表⽰存储在该 变量 中的 对象引⽤ 不会再指向另⼀个不同的对象，⽽这个对象 还是可以更改</li></ul></li></ul></li></ul></li></ul><h3 id="4-5-方法参数"><a href="#4-5-方法参数" class="headerlink" title="4.5 方法参数"></a>4.5 方法参数</h3><ul><li>java 对对象采用按值传递 P123</li><li>总结<ul><li>方法不能改变基本数据类型的参数</li><li>方法可以改变对象参数的形态</li><li>方法不能让一个对象参数引用一个新的对象</li></ul></li></ul><h3 id="4-6-对象构造"><a href="#4-6-对象构造" class="headerlink" title="4.6 对象构造"></a>4.6 对象构造</h3><ul><li>4.6.1 重载<ul><li>⽅法签名：⽅法名 + 参数类型<ul><li>返回类型不是⽅法签名的⼀部分</li></ul></li></ul></li><li>4.6.6 调用另一个构造器<ul><li>这个构造器将会调⽤另⼀个构造器<ul><li>构造器的第⼀个语句形如 &#96;this(…)</li></ul></li></ul></li></ul><h3 id="4-7-包"><a href="#4-7-包" class="headerlink" title="4.7 包"></a>4.7 包</h3><ul><li>. 如果包与⽬录不匹配<ul><li>如果不依赖于其他包时，可以成功编译</li><li>但是⽆法成功运⾏：虚拟机找不到类</li></ul></li></ul><h2 id="Ch5-继承"><a href="#Ch5-继承" class="headerlink" title="Ch5 继承"></a>Ch5 继承</h2><h3 id="类、继承"><a href="#类、继承" class="headerlink" title="类、继承"></a>类、继承</h3><ul><li><p>在覆盖⼀个⽅法的时候，⼦类⽅法不能低于⽗类⽅法的可见性。</p><ul><li>eg，⽗类⽅法为 public，⼦类必须为 public。 如果⼦类遗漏了 public，编译器就会报错。</li></ul></li><li><p>超类转子类</p><ul><li><p>需要<code>instanceof</code></p></li><li><p>eg</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (staff[<span class="number">1</span>] <span class="keyword">instanceof</span> Manager) &#123;</span><br><span class="line">    boss = (Manager)staff[<span class="number">1</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>覆盖超类方法，可以用<code>@Override</code></p></li></ul><h3 id="5-5-参数变量可变的方法"><a href="#5-5-参数变量可变的方法" class="headerlink" title="5.5 参数变量可变的方法"></a>5.5 参数变量可变的方法</h3><ul><li><p>用 <code>...</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">double</span> <span class="title function_">sum</span><span class="params">(<span class="type">double</span>... values)</span> &#123;</span><br><span class="line">  <span class="type">double</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">double</span> v: values) &#123;</span><br><span class="line">  sum += v;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="5-6-enum-类"><a href="#5-6-enum-类" class="headerlink" title="5.6 enum 类"></a>5.6 enum 类</h3><ul><li>构造器总是私有的</li></ul><h3 id="5-6-反射"><a href="#5-6-反射" class="headerlink" title="5.6 反射"></a>5.6 反射</h3><h2 id="Ch6-接口、lambda、内部类"><a href="#Ch6-接口、lambda、内部类" class="headerlink" title="Ch6 接口、lambda、内部类"></a>Ch6 接口、lambda、内部类</h2><h3 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h3><ul><li>接口中所有方法自动为pubilc，声明接口不必提供关键字</li><li>实现接口，必须把方法声明publi，否则编译报错  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义一个接口</span></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">MyInterface</span> &#123;</span><br><span class="line">    <span class="comment">// 在接口中声明一个方法</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">myMethod</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义一个类，实现MyInterface接口</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyClass</span> <span class="keyword">implements</span> <span class="title class_">MyInterface</span> &#123;</span><br><span class="line">    <span class="comment">// 在类中实现接口的方法，必须声明为public</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">myMethod</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello, World!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>默认⽅法<ul><li>可以⽤ default为接口⽅法提供⼀个默认实现<br>  <code>default int compareTo(T other) &#123;...&#125;</code></li><li>冲突<ul><li>如果在⼀个接⼜中将⼀个⽅法定义为默认⽅法，然后又在超类或另⼀个接⼜中定义同样的⽅法</li></ul><ol><li>超类优先</li><li>接口冲突<ul><li>自行解决二义性问题：从中选一个</li></ul></li><li>扩展了⼀个超类，同时实现了⼀个接口<ul><li>类优先</li></ul></li></ol></li></ul></li></ul><h3 id="lambda"><a href="#lambda" class="headerlink" title="lambda"></a>lambda</h3><ul><li>语法<ul><li><code>() -&gt; &#123;....&#125;</code></li><li>如果可以推导出⼀个lambda表的参数类型，则类型可以忽略<ul><li><code>(s1, s2) -&gt; &#123;...&#125;</code></li></ul></li><li>如果⽅法只有⼀个参数，⽽且这个参数类型可以推导出，ze可以省略⼩括号</li><li><code>a -&gt; &#123;....&#125;</code></li><li>lambda表达式必须所有情况都有返回。<ul><li>error: <code>(int x) -&gt; &#123;if (x &gt; 0) return 1;&#125;</code></li></ul></li></ul></li></ul><h2 id="Ch7-异常、断言、日志"><a href="#Ch7-异常、断言、日志" class="headerlink" title="Ch7 异常、断言、日志"></a>Ch7 异常、断言、日志</h2><h3 id="Exception-和-Error"><a href="#Exception-和-Error" class="headerlink" title="Exception 和 Error"></a>Exception 和 Error</h3><ul><li>共同派生于 Throwable</li><li>Error<ul><li>运行时的系统内部错误和资源耗尽错误</li></ul></li><li>Exception <ul><li>RuntimeException<ul><li>编程错误导致</li><li>错误的强制类型转换</li><li>数组越界</li><li>访问null指针</li></ul></li><li>其他异常<ul><li>I&#x2F;O错误</li><li>超越文件末尾读取文件</li><li>打开不存在的文件</li></ul></li></ul></li></ul><h3 id="Checked-Exception-和-Unchecked-Exception"><a href="#Checked-Exception-和-Unchecked-Exception" class="headerlink" title="Checked Exception 和 Unchecked Exception"></a>Checked Exception 和 Unchecked Exception</h3><h3 id="try-catch-finally"><a href="#try-catch-finally" class="headerlink" title="try-catch-finally"></a>try-catch-finally</h3><ul><li><code>try</code><ul><li>用于捕获异常。其后可接零个或多个 <code>catch</code> 块</li><li>如果没有 <code>catch</code> 块，则必须跟一个 <code>finally</code> 块。</li></ul></li><li><code>catch</code><ul><li>用于处理 try 捕获到的异常。</li></ul></li><li><code>finally</code> <ul><li>无论是否捕获或处理异常，<code>finally</code> 块里的语句都会被执行。</li><li>不要在 finally 语句块中使用 return<ul><li>当 try 语句和 finally 语句中都有 return 语句时，try 语句块中的 return 语句会被忽略。</li></ul></li></ul></li></ul><h3 id="try-with-resources"><a href="#try-with-resources" class="headerlink" title="try-with-resources"></a>try-with-resources</h3><ul><li><code>try(Resource res = ...) &#123;&#125;</code><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">        <span class="keyword">try</span> (<span class="type">Scanner</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(<span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;text.txt&quot;</span>))) &#123;  </span><br><span class="line">            <span class="keyword">while</span> (in.hasNext()) &#123;  </span><br><span class="line">                System.out.println(in.nextLine());  </span><br><span class="line">            &#125;  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">catch</span> (FileNotFoundException e) &#123;  </span><br><span class="line">            System.out.println(<span class="string">&quot;File not found&quot;</span>);  </span><br><span class="line"><span class="comment">//            e.printStackTrace();  </span></span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></li><li>建议使用try with resources 代替try catch finally</li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;java 核心技术卷 1 的学习笔记&lt;/p&gt;</summary>
    
    
    
    
    <category term="notes" scheme="http://example.com/tags/notes/"/>
    
  </entry>
  
  <entry>
    <title>javaWeb</title>
    <link href="http://example.com/2023/11/22/javaWeb/"/>
    <id>http://example.com/2023/11/22/javaWeb/</id>
    <published>2023-11-22T06:49:52.000Z</published>
    <updated>2024-09-14T05:04:30.434Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://www.bilibili.com/video/BV1m84y1w7Tb/?vd_source=33e6dae72e8734d733f973f5e84004b0">视频</a></p><span id="more"></span><h2 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h2><h3 id="html"><a href="#html" class="headerlink" title="html"></a>html</h3><ul><li>样式<ul><li>以 span 实例</li><li>全部设置<br><code>&lt;span&gt;2023年12月01日22:37&lt;/span&gt;</code><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">span &#123;</span><br><span class="line">color: #888888;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>class 选择<br><code>&lt;span class=&quot;time&quot;&gt;2023年12月01日22:37&lt;/span&gt;</code><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.time &#123;</span><br><span class="line">color: #888888;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>id 选择<br><code>&lt;span id=&quot;time&quot;&gt;2023年12月01日22:37&lt;/span&gt;</code><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#time &#123;</span><br><span class="line">color: #888888;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>超链接<br><code>&lt;a href=&quot;https://white-by.github.io/&quot; target=&quot;_blank&quot;&gt;</code><ul><li>空白页打开&#96;_blank</li><li>当前页打开<code>_self</code></li><li>去除下划线&#96;text-decoration-line: none;</li></ul></li><li>视频<ul><li><code>&lt;video src=&quot;video/cat.mp4&quot; controls=&quot;controls&quot;&gt;&lt;/video&gt;</code></li></ul></li><li>音频<ul><li><code>audio</code></li></ul></li><li>段落<ul><li><code>p</code></li></ul></li><li>文本加粗<ul><li><code>b</code>&#x2F;<code>strong</code></li></ul></li><li>换行<ul><li><code>br</code></li></ul></li><li>缩进<ul><li><code>text-indent: 30px;</code></li></ul></li><li>行高<ul><li><code>line-height: 30px;</code></li></ul></li></ul></li><li>布局<ul><li>盒子模型<ul><li>内容区域 content、内边距区域 padding、边框区域 border、外边框区域 margin</li></ul></li><li>居中<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#center &#123;</span><br><span class="line">width: 80%;</span><br><span class="line">margin: 0 auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li>表格 table<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;table border=&quot;1px&quot; cellspacing=&quot;0&quot; width=&quot;600px&quot;&gt;</span><br><span class="line">&lt;tr&gt;</span><br><span class="line">&lt;th&gt;名字&lt;/th&gt;</span><br><span class="line">&lt;th&gt;年龄&lt;/th&gt;</span><br><span class="line">&lt;/tr&gt;</span><br><span class="line">&lt;tr&gt;</span><br><span class="line">&lt;td&gt;join&lt;/td&gt;</span><br><span class="line">&lt;td&gt;19&lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br><span class="line">&lt;/table&gt;</span><br></pre></td></tr></table></figure></li><li>表单 form<ul><li>action: 提交的 url</li><li>method:<ul><li>get: url 后面拼接数据，default 值</li><li>post: 请求体中传递数据<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=&quot;&quot; method=&quot;get&quot;&gt;</span><br><span class="line">名字: &lt;input type=&quot;text&quot; name=&quot;name&quot;&gt; &lt;br&gt;</span><br><span class="line">pwd: &lt;input type=&quot;password&quot; name=&quot;age&quot;&gt; &lt;br&gt;</span><br><span class="line">性别: &lt;label&gt;&lt;input type=&quot;radio&quot; name=&quot;sex&quot; value=&quot;1&quot;&gt;女&lt;/label&gt;</span><br><span class="line">&lt;label&gt;&lt;input type=&quot;radio&quot; name=&quot;sex&quot; value=&quot;2&quot;&gt;猫&lt;/label&gt; &lt;br&gt;</span><br><span class="line">文件: &lt;input type=&quot;file&quot; name=&quot;file&quot;&gt; &lt;br&gt;</span><br><span class="line">生日: &lt;input type=&quot;date&quot; name=&quot;birthday&quot;&gt; &lt;br&gt;</span><br><span class="line">mail: &lt;input type=&quot;email&quot; name=&quot;email&quot;&gt; &lt;br&gt;</span><br><span class="line">数字: &lt;input type=&quot;number&quot; name=&quot;num&quot;&gt; &lt;br&gt;</span><br><span class="line">学历: &lt;select name=&quot;sex&quot;&gt;</span><br><span class="line">&lt;option value=&quot;&quot;&gt;请选择&lt;/option&gt;</span><br><span class="line">&lt;option value=&quot;1&quot;&gt;本科&lt;/option&gt;</span><br><span class="line">&lt;option value=&quot;2&quot;&gt;硕士&lt;/option&gt;</span><br><span class="line">&lt;/select&gt; &lt;br&gt;</span><br><span class="line">描述: &lt;textarea name=&quot;description&quot; cols=&quot;30&quot; rows=&quot;10&quot;&gt;&lt;/textarea&gt; &lt;br&gt;</span><br><span class="line">&lt;input type=&quot;submit&quot; value=&quot;提交&quot;&gt;</span><br><span class="line">&lt;input type=&quot;reset&quot; value=&quot;reset&quot;&gt;</span><br><span class="line">&lt;input type=&quot;button&quot; value=&quot;button&quot;&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure></li></ul></li></ul></li></ul><h3 id="js"><a href="#js" class="headerlink" title="js"></a>js</h3><ul><li><p>引入</p><ul><li>内部<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">alert(&#x27;hello js&#x27;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li>外部（不可以自闭合）<br><code>&lt;script src=&quot;demo.js&quot;&gt;&lt;/script&gt;</code></li></ul></li><li><p>输出</p><ul><li>弹窗<br>&#96;window.alert(“hello js”);</li><li>界面写入<br><code>document.write(&quot;D_hello js&quot;);</code></li><li>控制台<br><code>console.log(&quot;C_hello js&quot;);</code></li></ul></li><li><p>数据类型</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">document.write(typeof 3 + &quot; &quot;);</span><br><span class="line">document.write(typeof 3.13 + &quot; &quot;);</span><br><span class="line">document.write(typeof true + &quot; &quot;);</span><br><span class="line">document.write(typeof &quot;a&quot; + &quot; &quot;);</span><br><span class="line">document.write(typeof null + &quot; &quot;);</span><br><span class="line">var x;</span><br><span class="line">document.write(typeof x);</span><br><span class="line">// 以上分别是：number number boolean string object undefined</span><br></pre></td></tr></table></figure></li><li><p>运算符</p><ul><li><code>==</code> 会类型转换</li><li><code>===</code> 不会类型转化</li></ul></li><li><p>函数调用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">// 方法一</span><br><span class="line">function add(a, b) &#123;</span><br><span class="line">return a + b;</span><br><span class="line">&#125;</span><br><span class="line">var x = add(10, 20);</span><br><span class="line">alert(x);</span><br><span class="line"></span><br><span class="line">// 方法二</span><br><span class="line">var add =  function(a, b) &#123;</span><br><span class="line">return a + b;</span><br><span class="line">&#125;</span><br><span class="line">var x = add(10, 20);</span><br><span class="line">alert(x);</span><br></pre></td></tr></table></figure></li><li><p>定义对象</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">var user = &#123;</span><br><span class="line">name: &quot;ana&quot;,</span><br><span class="line">age: 20,</span><br><span class="line">eat() &#123;</span><br><span class="line">alert(&quot;eat&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>JSON</p><ul><li>数据载体</li><li>语法<br><code>var user = &#39;&#123;&quot;name&quot;:&quot;ana&quot;, &quot;age&quot;:18,&quot;arr&quot;:[1, 2, 3]&#125;&#39;;</code></li><li>转化<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// JSON字符串 -&gt; JS对象</span><br><span class="line">var jsObj = JSON.parse(user);</span><br><span class="line">// JS对象 -&gt; JSON字符串</span><br><span class="line">var jsonStr = JSON.stringify(jsObj);</span><br></pre></td></tr></table></figure></li></ul></li><li><p>bom</p><ul><li>window</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">// 确认框</span><br><span class="line">var flag = confirm(&quot;are you sure?&quot;);</span><br><span class="line">alert(flag);</span><br><span class="line"></span><br><span class="line">// 定时器</span><br><span class="line">var i = 0;</span><br><span class="line">setInterval(res=&gt; &#123;</span><br><span class="line">i++;</span><br><span class="line">document.write(i);</span><br><span class="line">&#125;, 2000); // 每隔2s输出</span><br><span class="line"></span><br><span class="line">// 延时器</span><br><span class="line">setTimeout(res =&gt;&#123;</span><br><span class="line">document.write(i);</span><br><span class="line">&#125;, 2000); // 2s后输出</span><br></pre></td></tr></table></figure><ul><li>location</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 获取当前地址</span><br><span class="line">alert(location.href);</span><br><span class="line"></span><br><span class="line">// 跳转到指定地址</span><br><span class="line">location.href = &quot;https://white-by.github.io/&quot;;</span><br></pre></td></tr></table></figure></li><li><p>dom</p><ul><li>查询</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">// 通过id查询</span><br><span class="line">var id = document.getElementById(&#x27;id1&#x27;);</span><br><span class="line"></span><br><span class="line">// class</span><br><span class="line">var cls = document.getElementsByClassName(&#x27;class1&#x27;);</span><br><span class="line"></span><br><span class="line">// 标签</span><br><span class="line">var name = document.getElementsByTagName(&#x27;div&#x27;);</span><br><span class="line"></span><br><span class="line">// name</span><br><span class="line">var name = document.getElementsByName(&#x27;name&#x27;);</span><br></pre></td></tr></table></figure><ul><li>更改</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 先查询</span><br><span class="line">var img = document.getElementById(&#x27;off&#x27;);</span><br><span class="line"></span><br><span class="line">// 去官方文档查靠什么更改的，eg.img: src; div: innerHTML;input checkbox: checked = true</span><br><span class="line">img.src = &quot;on.gif&quot;;</span><br></pre></td></tr></table></figure></li><li><p>事件监听</p><ul><li><p>事件绑定</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">// 法1</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">id</span>=<span class="string">&quot;btn1&quot;</span> <span class="attr">value</span>=<span class="string">&quot;s1&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;on()&quot;</span>&gt;</span></span><br><span class="line">    // 法2</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">id</span>=<span class="string">&quot;btn2&quot;</span> <span class="attr">value</span>=<span class="string">&quot;s2&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">on</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">alert</span>(<span class="string">&quot;on s1&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;btn2&#x27;</span>).<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">alert</span>(<span class="string">&quot;on s2&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="vue"><a href="#vue" class="headerlink" title="vue"></a>vue</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>vue<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">v-bind:href</span>=<span class="string">&quot;url&quot;</span>&gt;</span>whiteby<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">:href</span>=<span class="string">&quot;url&quot;</span>&gt;</span>whi<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;url&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;handle()&quot;</span>&gt;</span>btn<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">url</span>: <span class="string">&quot;https://white-by.github.io/&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">handle</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="title function_">alert</span>(<span class="string">&quot;hello&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="element"><a href="#element" class="headerlink" title="element"></a>element</h3><p><a href="https://element.eleme.cn/#/">官方文件</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line"></span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">  </span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="maven"><a href="#maven" class="headerlink" title="maven"></a>maven</h2><ul><li>[依赖版本搜索](<a href="https://mvnrepository.com/">Maven Repository: Search&#x2F;Browse&#x2F;Explore (mvnrepository.com)</a>)</li><li>版本依赖参考  <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span>        </span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ch.qos.logback<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>logback-classic<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><strong>依赖传递</strong><ul><li>A依赖B，B依赖C，那么A也会包含C依赖的包</li><li><strong>排除依赖</strong><ul><li>可以通过<code>exclusion</code>标签手动排除  <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    ......</span><br><span class="line">    <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>x<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.x<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><strong>依赖范围</strong><ul><li><strong>compile</strong>：编译依赖范围（默认），使用此依赖范围对于编译、测试、运行三种都有效，即在编译、测试和运行的时候都要使用该依赖 Jar 包。</li><li><strong>test</strong>：测试依赖范围，从字面意思就可以知道此依赖范围只能用于测试，而在编译和运行项目时无法使用此类依赖，典型的是 JUnit，它只用于编译测试代码和运行测试代码的时候才需要。</li><li><strong>provided</strong>：此依赖范围，对于编译和测试有效，而对运行时无效。比如 <code>servlet-api.jar</code> 在 Tomcat 中已经提供了，我们只需要的是编译期提供而已。</li><li><strong>runtime</strong>：运行时依赖范围，对于测试和运行有效，但是在编译主代码时无效，典型的就是 JDBC 驱动实现。</li><li><strong>system</strong>：系统依赖范围，使用 system 范围的依赖时必须通过 systemPath 元素显示地指定依赖文件的路径，不依赖 Maven 仓库解析，所以可能会造成建构的不可移植</li></ul></li></ul><p>![[maven依赖范围.png]]</p><ul><li>**生命周期<ul><li>clean生命周期<ul><li>清理</li><li>clean：清理</li></ul></li><li>default生命周期<ul><li>核心工作：编译、测试、打包</li><li>compile：编译</li><li>test：测试(junit)</li><li>package：打包</li><li>install：安装</li></ul></li><li>site生命周期<ul><li>生成报告、发布站点</li></ul></li></ul></li></ul><h2 id="HTTP"><a href="#HTTP" class="headerlink" title="HTTP"></a>HTTP</h2><ul><li>概述<ul><li>Hypertext Transfer Protocol，超文本传输协议，一种用于传输超文本和多媒体内容的协议</li></ul></li><li>请求<ul><li>GET 和 POST 的区别<ul><li>语义（主要区别）<ul><li>GET 通常用于获取或查询资源，而 POST 通常用于创建或修改资源。</li></ul></li><li>格式：<ul><li>GET 请求的参数通常放在 URL 中，形成查询字符串（querystring）</li><li>POST 请求的参数通常放在请求体（body）中</li></ul></li></ul></li></ul></li><li>响应<ul><li>状态码<ol><li>1xx<ul><li>响应中</li></ul></li><li>2xx<ul><li>成功</li><li><strong>200 OK</strong>：请求被成功处理，这个是我们平时最常见的一个 HTTP 状态码。</li></ul></li><li>3xx<ul><li>重定向</li><li>302 Found：资源被临时重定向了。比如你的网站的某些资源被暂时转移到另外一个网址。<ul><li>浏览器会自动访问Location给的URL（另外那个网站）</li></ul></li></ul></li><li>4xx<ul><li>客户端错误</li><li>400 Bad Request：发送的 HTTP 请求存在问题，客户端语法有错。比如请求参数不合法、请求方法错误。</li><li>403 Forbidden：拒绝 HTTP 请求，不处理。一般用来针对非法请求。</li><li><strong>404 Not Found</strong>：你请求的资源未在服务端找到。比如你请求某个用户的信息，服务端并没有找到指定的用户</li></ul></li><li>5xx<ul><li>服务端错误</li><li><strong>500 Internal Server Error</strong>：服务端出问题了（通常是服务端出 Bug 了）。比如你服务端处理请求的时候突然抛出异常，但是异常并未在服务端被正确处理。</li></ul></li></ol></li></ul></li></ul><h2 id="请求响应"><a href="#请求响应" class="headerlink" title="请求响应"></a>请求响应</h2><ul><li>简单参数<ul><li>get <ul><li>param传递</li></ul></li><li>post<ul><li>request body传递  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/simpleParam&quot;)</span>  </span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">simpleParam</span><span class="params">(String name, Integer age)</span> &#123;  </span><br><span class="line">System.out.println(<span class="string">&quot;name=&quot;</span> + name + <span class="string">&quot; age=&quot;</span> + age);  </span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;ok&quot;</span>;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 方法二</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/simpleParam&quot;)</span>  </span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">simpleParam</span><span class="params">(<span class="meta">@RequestParam(name = &quot;name&quot;, required = false)</span> String userName, Integer age)</span> &#123;  </span><br><span class="line">System.out.println(<span class="string">&quot;name=&quot;</span> + userName + <span class="string">&quot; age=&quot;</span> + age);  </span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;ok&quot;</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li>数组list参数  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// array</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/arrayParam&quot;)</span>  </span><br><span class="line">   <span class="keyword">public</span> String <span class="title function_">arrayParam</span><span class="params">(String []hobby)</span> &#123;  </span><br><span class="line">       <span class="keyword">for</span> (<span class="keyword">var</span> h : hobby) &#123;  </span><br><span class="line">           System.out.println(<span class="string">&quot;hobby=&quot;</span> + h);  </span><br><span class="line">       &#125;  </span><br><span class="line">       System.out.println(Arrays.toString(hobby));  </span><br><span class="line">       <span class="keyword">return</span> <span class="string">&quot;ok_array&quot;</span>;  </span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// list</span></span><br><span class="line">   <span class="meta">@RequestMapping(&quot;/listParam&quot;)</span>  </span><br><span class="line">   <span class="keyword">public</span> String <span class="title function_">listParam</span><span class="params">(<span class="meta">@RequestParam</span> List&lt;String&gt; hobby)</span> &#123;  </span><br><span class="line">       <span class="keyword">for</span> (<span class="keyword">var</span> h : hobby) &#123;  </span><br><span class="line">           System.out.println(<span class="string">&quot;hobby=&quot;</span> + h);  </span><br><span class="line">       &#125;  </span><br><span class="line">       System.out.println(hobby);  </span><br><span class="line">       <span class="keyword">return</span> <span class="string">&quot;ok_list&quot;</span>;  </span><br><span class="line">   &#125;  </span><br></pre></td></tr></table></figure></li><li>日期参数  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/dateParam&quot;)</span>  </span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">dateParam</span><span class="params">(<span class="meta">@DateTimeFormat(pattern = &quot;yyyy-MM-dd HH:mm:ss&quot;)</span> LocalDateTime updateTime)</span> &#123; </span><br><span class="line">    System.out.println(updateTime);  </span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;ok_date&quot;</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>JSON参数  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/jsonParam&quot;)</span>  </span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">jsonParam</span><span class="params">(<span class="meta">@RequestBody</span> User user)</span> &#123;  </span><br><span class="line">    System.out.println(user.getName()+user.getAge()+user.getAddress().getProvince()+user.getAddress().getCity());  </span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;ok_json&quot;</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>路径参数  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/path/&#123;id&#125;&quot;)</span>  </span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">pathParam</span><span class="params">(<span class="meta">@PathVariable</span> String id)</span> &#123;  </span><br><span class="line">    System.out.println(id);  </span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;ok_path&quot;</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>Result<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Result</span> &#123;  </span><br><span class="line">    <span class="keyword">private</span> Integer code;  </span><br><span class="line">    <span class="keyword">private</span> String msg;  </span><br><span class="line">    <span class="keyword">private</span> Object data;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Result</span><span class="params">()</span> &#123;&#125;  </span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Result</span><span class="params">(Integer code, String msg, Object data)</span> &#123;  </span><br><span class="line">        <span class="built_in">this</span>.code = code;  </span><br><span class="line">        <span class="built_in">this</span>.msg = msg;  </span><br><span class="line">        <span class="built_in">this</span>.data = data;  </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">  get\set方法...</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Result <span class="title function_">success</span><span class="params">()</span> &#123;  </span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Result</span>(<span class="number">1</span>, <span class="string">&quot;success&quot;</span>, <span class="literal">null</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Result <span class="title function_">success</span><span class="params">(Object data)</span> &#123;  </span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Result</span>(<span class="number">1</span>, <span class="string">&quot;success&quot;</span>, data);  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Result <span class="title function_">error</span><span class="params">(String msg)</span> &#123;  </span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Result</span>(<span class="number">0</span>, msg, <span class="literal">null</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>统一返回<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/getList&quot;)</span>  </span><br><span class="line"><span class="keyword">public</span> Result <span class="title function_">getList</span><span class="params">()</span> &#123;  </span><br><span class="line">    List&lt;Address&gt; addressList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();  </span><br><span class="line">    <span class="type">Address</span> <span class="variable">address</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Address</span>();  </span><br><span class="line">    address.setProvince(<span class="string">&quot;gd&quot;</span>);  </span><br><span class="line">    address.setCity(<span class="string">&quot;sz&quot;</span>);  </span><br><span class="line">    addressList.add(address);  </span><br><span class="line">    <span class="keyword">return</span> Result.success(addressList);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="分层解耦"><a href="#分层解耦" class="headerlink" title="分层解耦"></a>分层解耦</h2><ul><li>三层架构<ul><li>controller<ul><li>接受请求，响应数据</li></ul></li><li>service<ul><li>业务逻辑层</li></ul></li><li>dao<ul><li>数据访问层（持久层）</li></ul></li></ul></li><li>IoC<ul><li>IoC（Inversion of Control:控制反转） 是一种设计思想，而不是一个具体的技术实现</li><li>IoC 的思想就是将原本在程序中手动创建对象的控制权，交由 Spring 框架来管理</li><li>控制反转<ul><li>控制：指的是对象创建（实例化、管理）的权力</li><li>反转：控制权交给外部环境（Spring 框架、IoC 容器）</li></ul></li></ul></li><li>DI<ul><li>DI（Dependency Injection:依赖注入）</li></ul></li><li>Bean<ul><li>Bean对象，指那些被 IoC 容器所管理的对象</li><li><code>@Component</code> （给dao层和service写）<ul><li>交给ioc容器管理</li></ul></li><li><code>@Autowired</code> 注解（给到对象和service写）<ul><li>让 Spring 容器帮我们自动装配 bean</li></ul></li><li>和<code>@Resoure</code> 区别<ul><li>resource是jdk的，autowired是spring的</li><li>resource按名字注入，autowired按类型</li></ul></li><li><code>Component</code> 衍生注解（一般无法归以下三类时用）<ul><li><code>@Repository</code> :  Dao 层</li><li><code>@Service</code> : servic层</li><li><code>@Controller</code> : control层</li></ul></li></ul></li></ul><h2 id="mybatis"><a href="#mybatis" class="headerlink" title="mybatis"></a>mybatis</h2><ul><li>开启日志 <code>application.properties</code>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#配置mybatis的日志, 指定输出到控制台  </span><br><span class="line">mybatis.c`onfiguration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl</span><br></pre></td></tr></table></figure></li><li>删除  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Delete(&quot;delete from emp where id = #&#123;id&#125;&quot;)</span>  </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">delete</span><span class="params">(Integer id)</span>;</span><br></pre></td></tr></table></figure><ul><li><code>#&#123;id&#125;</code>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">==&gt;  Preparing: delete from emp where id = ?</span><br><span class="line">==&gt; Parameters: 17(Integer)</span><br></pre></td></tr></table></figure></li><li><code>?</code> 参数占位符</li><li>预编译sql</li><li><code>#&#123;&#125;</code> 和 <code>$&#123;&#125;</code> 的区别<ul><li><code>#&#123;&#125;</code><ul><li>参数占位符，MyBatis 会将 sql 中的<code>#&#123;&#125;</code>替换为? 号，再给<code>?</code>设置参数值</li></ul></li><li><code>$&#123;&#125;</code><ul><li>变量占位符，拼接mysql，存在mysql注入问题</li></ul></li></ul></li></ul></li><li>新增  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Insert(&quot;insert into emp(username, name, gender, image, job, entrydate, dept_id, create_time, update_time)&quot; +  &quot;values(#&#123;username&#125;, #&#123;name&#125;, #&#123;gender&#125;, #&#123;image&#125;, #&#123;job&#125;, #&#123;entrydate&#125;, #&#123;deptId&#125;, #&#123;createTime&#125;, #&#123;updateTime&#125;)&quot;)</span>  </span><br><span class="line"><span class="meta">@Options(useGeneratedKeys = true, keyProperty = &quot;id&quot;)</span>  </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">insert</span><span class="params">(Emp emp)</span>;</span><br></pre></td></tr></table></figure></li><li>更新  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Update(&quot;update emp set username=#&#123;username&#125;, name=#&#123;name&#125;, gender=#&#123;gender&#125;, image=#&#123;image&#125;, job=#&#123;job&#125;, entrydate=#&#123;entrydate&#125;, dept_id=#&#123;deptId&#125;, update_time=#&#123;updateTime&#125; where id = #&#123;id&#125;&quot;)</span>  </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">update</span><span class="params">(Emp emp)</span>;</span><br></pre></td></tr></table></figure></li><li>查询（by Id）  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Select(&quot;select * from emp where id=#&#123;id&#125;&quot;)</span>  </span><br><span class="line"><span class="keyword">public</span> Emp <span class="title function_">getById</span><span class="params">(Integer id)</span>;</span><br></pre></td></tr></table></figure></li><li>mybatis的驼峰命名自动映射开关<ul><li><code>mybatis.configuration.map-underscore-to-camel-case=true</code></li></ul></li></ul><h3 id="xml"><a href="#xml" class="headerlink" title="xml"></a>xml</h3><ul><li>动态sql<ul><li>查<ul><li><code>&lt;where&gt;</code>  <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.itheima.mapper.EmpMapper&quot;</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;list&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.itheima.pojo.Emp&quot;</span>&gt;</span>  </span><br><span class="line">        select *  </span><br><span class="line">        from emp        </span><br><span class="line">        <span class="tag">&lt;<span class="name">where</span>&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;name != null&quot;</span>&gt;</span>  </span><br><span class="line">                name like concat(&#x27;%&#x27;, #&#123;name&#125;, &#x27;%&#x27;)  </span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;gender != null&quot;</span>&gt;</span>  </span><br><span class="line">                and gender = #&#123;gender&#125;  </span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;begin != null and end != null&quot;</span>&gt;</span>  </span><br><span class="line">                and entrydate between #&#123;begin&#125; and #&#123;end&#125;  </span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;/<span class="name">where</span>&gt;</span>  </span><br><span class="line">        order by update_time desc  </span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li><li>改<ul><li><code>&lt;set&gt;</code>  <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;update2&quot;</span>&gt;</span>  </span><br><span class="line">        update emp  </span><br><span class="line">        <span class="tag">&lt;<span class="name">set</span>&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;username != null&quot;</span>&gt;</span>  </span><br><span class="line">                username=#&#123;username&#125;,  </span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span>   </span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;gender != null&quot;</span>&gt;</span>  </span><br><span class="line">                gender=#&#123;gender&#125;,  </span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span>   </span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;updateTime != null&quot;</span>&gt;</span>  </span><br><span class="line">                update_time=#&#123;updateTime&#125;  </span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;/<span class="name">set</span>&gt;</span>  </span><br><span class="line">        where id = #&#123;id&#125;  </span><br><span class="line">    <span class="tag">&lt;/<span class="name">update</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li><li>foreach  <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;deleteByIds&quot;</span>&gt;</span>  </span><br><span class="line">    delete  </span><br><span class="line">    from emp where id in    <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">&quot;ids&quot;</span> <span class="attr">item</span>=<span class="string">&quot;id&quot;</span> <span class="attr">separator</span>=<span class="string">&quot;,&quot;</span> <span class="attr">open</span>=<span class="string">&quot;(&quot;</span> <span class="attr">close</span>=<span class="string">&quot;)&quot;</span>&gt;</span>  </span><br><span class="line">        #&#123;id&#125;  </span><br><span class="line">    <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>降低重复代码  <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">sql</span> <span class="attr">id</span>=<span class="string">&quot;commonSelect&quot;</span>&gt;</span>  </span><br><span class="line">    select id, username, password, name, gender, image, job, entrydate, dept_id, create_time, update_time from emp  </span><br><span class="line"><span class="tag">&lt;/<span class="name">sql</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>使用上面的sql标签  <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">&quot;commonSelect&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="综合开发"><a href="#综合开发" class="headerlink" title="综合开发"></a>综合开发</h2><ul><li>使用log: <code>@Slf4j</code><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">log.info(<span class="string">&quot;查询全部部门信息&quot;</span>);</span><br></pre></td></tr></table></figure></li><li>公共路径<ul><li>在controller前面统一写<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/depts&quot;)</span></span><br></pre></td></tr></table></figure></li></ul></li><li>默认值<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping</span>  </span><br><span class="line"><span class="keyword">public</span> Result <span class="title function_">page</span><span class="params">(<span class="meta">@RequestParam(defaultValue = &quot;1&quot;)</span> Integer page, <span class="meta">@RequestParam(defaultValue = &quot;10&quot;)</span> Integer pageSize)</span> &#123;  </span><br><span class="line">    log.info(<span class="string">&quot;分页查询:&#123;&#125;,&#123;&#125;&quot;</span>, page, pageSize);  </span><br><span class="line">    <span class="type">PageBean</span> <span class="variable">pageBean</span> <span class="operator">=</span> empService.page(page, pageSize);  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">return</span> Result.success(pageBean);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>分页查询</li><li>依赖<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.pagehelper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>pagehelper-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>controller<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping</span>  </span><br><span class="line"><span class="keyword">public</span> Result <span class="title function_">page</span><span class="params">(<span class="meta">@RequestParam(defaultValue = &quot;1&quot;)</span> Integer page, <span class="meta">@RequestParam(defaultValue = &quot;10&quot;)</span> Integer pageSize)</span> &#123;  </span><br><span class="line">    log.info(<span class="string">&quot;分页查询:&#123;&#125;,&#123;&#125;&quot;</span>, page, pageSize);  </span><br><span class="line">    <span class="type">PageBean</span> <span class="variable">pageBean</span> <span class="operator">=</span> empService.page(page, pageSize);  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">return</span> Result.success(pageBean);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>service<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span>  </span><br><span class="line"><span class="keyword">public</span> PageBean <span class="title function_">page</span><span class="params">(Integer page, Integer pageSize)</span> &#123;  </span><br><span class="line">    PageHelper.startPage(page, pageSize);  </span><br><span class="line">    Page&lt;Emp&gt; p = (Page&lt;Emp&gt;) empMapper.list();  </span><br><span class="line">  </span><br><span class="line">    <span class="type">PageBean</span> <span class="variable">pageBean</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PageBean</span>(p.getTotal(), p.getResult());   </span><br><span class="line">    <span class="keyword">return</span> pageBean;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>mapper<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Select(&quot;select * from emp&quot;)</span>  </span><br><span class="line"><span class="keyword">public</span> List&lt;Emp&gt;list();</span><br></pre></td></tr></table></figure></li><li>xml<ul><li>需要与<code>mapper</code>同包同名</li><li>在<code>resources</code>下创建目录<code>com/example/mapper</code></li></ul></li><li>加上控制的<code>controller</code><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping</span>  </span><br><span class="line"><span class="keyword">public</span> Result <span class="title function_">page</span><span class="params">(<span class="meta">@RequestParam(defaultValue = &quot;1&quot;)</span> Integer page,  </span></span><br><span class="line"><span class="params">                   <span class="meta">@RequestParam(defaultValue = &quot;10&quot;)</span> Integer pageSize,  </span></span><br><span class="line"><span class="params">                   String name, Short gender,  </span></span><br><span class="line"><span class="params">                   <span class="meta">@DateTimeFormat(pattern = &quot;yyyy-MM-dd&quot;)</span> LocalDate begin,  </span></span><br><span class="line"><span class="params">                   <span class="meta">@DateTimeFormat(pattern = &quot;yyyy-MM-dd&quot;)</span> LocalDate end)</span> &#123;  </span><br><span class="line">    log.info(<span class="string">&quot;分页查询:&#123;&#125;,&#123;&#125;,&#123;&#125;,&#123;&#125;,&#123;&#125;,&#123;&#125;&quot;</span>, page, pageSize, name, gender, begin, end);  </span><br><span class="line">    <span class="type">PageBean</span> <span class="variable">pageBean</span> <span class="operator">=</span> empService.page(page, pageSize, name, gender, begin, end);  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">return</span> Result.success(pageBean);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><code>mapper</code><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> List&lt;Emp&gt;list(<span class="meta">@Param(&quot;name&quot;)</span> String name,<span class="meta">@Param(&quot;gender&quot;)</span> Short gender, <span class="meta">@Param(&quot;begin&quot;)</span> LocalDate begin, <span class="meta">@Param(&quot;end&quot;)</span> LocalDate end);  </span><br></pre></td></tr></table></figure></li></ul><h3 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h3><ul><li>本地<ul><li><code>UUID.randomUUID().toString()</code> 获取唯一名字<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping(&quot;/upload&quot;)</span>  </span><br><span class="line"><span class="keyword">public</span> Result <span class="title function_">upload</span><span class="params">(String username, Integer age, MultipartFile image)</span> <span class="keyword">throws</span> IOException &#123;  </span><br><span class="line">    log.info(<span class="string">&quot;文件上传:&#123;&#125;,&#123;&#125;,&#123;&#125;&quot;</span>, username, age, image);  </span><br><span class="line">    <span class="type">String</span> <span class="variable">originalFilename</span> <span class="operator">=</span> image.getOriginalFilename();  </span><br><span class="line">  </span><br><span class="line">    <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> originalFilename.lastIndexOf(<span class="string">&quot;.&quot;</span>);  </span><br><span class="line">    <span class="type">String</span> <span class="variable">extname</span> <span class="operator">=</span> originalFilename.substring(index);  </span><br><span class="line">  </span><br><span class="line">    <span class="type">String</span> <span class="variable">newFileName</span> <span class="operator">=</span> UUID.randomUUID().toString() + extname;  </span><br><span class="line">    log.info(<span class="string">&quot;新文件名:&#123;&#125;&quot;</span>, newFileName);  </span><br><span class="line">  </span><br><span class="line">    image.transferTo(<span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;D:\\code\\javaWeb\\tlias-web-management\\images\\&quot;</span> + newFileName));  </span><br><span class="line">    <span class="keyword">return</span> Result.success();  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li>文件上传限制<figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#单个文件上传限制  </span></span><br><span class="line"><span class="attr">spring.servlet.multipart.max-file-size</span>=<span class="string">10MB  </span></span><br><span class="line"><span class="comment">#单个请求的文件上传限制  </span></span><br><span class="line"><span class="attr">spring.servlet.multipart.max-request-size</span>=<span class="string">100MB</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="OSS配置"><a href="#OSS配置" class="headerlink" title="OSS配置"></a>OSS配置</h2><ul><li>value</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Value(&quot;$&#123;aliyun.oss.endpoint&#125;&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String endpoint;</span><br><span class="line"><span class="meta">@Value(&quot;$&#123;aliyun.oss.accessKeyId&#125;&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String accessKeyId;</span><br><span class="line"><span class="meta">@Value(&quot;$&#123;aliyun.oss.accessKeySecret&#125;&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String accessKeySecret;</span><br><span class="line"><span class="meta">@Value(&quot;$&#123;aliyun.oss.bucketName&#125;&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String bucketName;</span><br></pre></td></tr></table></figure><ul><li>自动注入（代替上面）<ul><li><code>@ConfigurationProperties</code>批量注入</li><li><code>@Value</code>单个注入</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@ConfigurationProperties(prefix = &quot;aliyun.oss&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AliOSSProperties</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String endpoint;</span><br><span class="line">    <span class="keyword">private</span> String accessKeyId;</span><br><span class="line">    <span class="keyword">private</span> String accessKeySecret;</span><br><span class="line">    <span class="keyword">private</span> String bucketName;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>yml</code>配置（阿里云）</li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">aliyun:</span></span><br><span class="line">  <span class="attr">oss:</span></span><br><span class="line">    <span class="attr">endpoint:</span> <span class="string">https://oss-cn-beijing.aliyuncs.com</span></span><br><span class="line">    <span class="attr">accessKeyId:</span> <span class="string">LTAtJL</span></span><br><span class="line">    <span class="attr">accessKeySecret:</span> <span class="string">JyFMC1Z</span></span><br><span class="line">    <span class="attr">bucketName:</span> <span class="string">java</span></span><br></pre></td></tr></table></figure><ul><li><code>pom</code>配置（非必须）</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-configuration-processor<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="登陆校验"><a href="#登陆校验" class="headerlink" title="登陆校验"></a>登陆校验</h2><h3 id="Fitler-过滤器"><a href="#Fitler-过滤器" class="headerlink" title="Fitler 过滤器"></a>Fitler 过滤器</h3><ul><li><code>LoginCheckFilter.java</code></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@WebFilter(urlPatterns = &quot;/*&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LoginCheckFilter</span> <span class="keyword">implements</span> <span class="title class_">Filter</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doFilter</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</span> <span class="keyword">throws</span> IOException, ServletException &#123;</span><br><span class="line">        <span class="type">HttpServletRequest</span> <span class="variable">request</span> <span class="operator">=</span> (HttpServletRequest) servletRequest;</span><br><span class="line">        <span class="type">HttpServletResponse</span> <span class="variable">response</span> <span class="operator">=</span> (HttpServletResponse) servletResponse;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.获取url</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> request.getRequestURL().toString();</span><br><span class="line">        log.info(<span class="string">&quot;请求的url:&#123;&#125;&quot;</span>, url);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.判断url是否包含login</span></span><br><span class="line">        <span class="keyword">if</span> (url.contains(<span class="string">&quot;login&quot;</span>)) &#123;</span><br><span class="line">            log.info(<span class="string">&quot;login操作，放行&quot;</span>);</span><br><span class="line">            filterChain.doFilter(servletRequest, servletResponse);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.获取token</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">jwt</span> <span class="operator">=</span> request.getHeader(<span class="string">&quot;token&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4.判断token是否存在</span></span><br><span class="line">        <span class="keyword">if</span> (!StringUtils.hasLength(jwt)) &#123;</span><br><span class="line">            log.info(<span class="string">&quot;token为空，未登录&quot;</span>);</span><br><span class="line">            <span class="type">Result</span> <span class="variable">error</span> <span class="operator">=</span> Result.error(<span class="string">&quot;NOT_LOGIN&quot;</span>);</span><br><span class="line">            <span class="comment">// 对象 -&gt; json</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">notLogin</span> <span class="operator">=</span> JSONObject.toJSONString(error);</span><br><span class="line">            response.getWriter().write(notLogin);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 5.解析token</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            JwtUtils.parseJWT(jwt);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            log.info(<span class="string">&quot;解析jwt失败，返回未登录信息&quot;</span>);</span><br><span class="line">            <span class="type">Result</span> <span class="variable">error</span> <span class="operator">=</span> Result.error(<span class="string">&quot;NOT_LOGIN&quot;</span>);</span><br><span class="line">            <span class="comment">// 对象 -&gt; json</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">notLogin</span> <span class="operator">=</span> JSONObject.toJSONString(error);</span><br><span class="line">            response.getWriter().write(notLogin);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 6.放行数据</span></span><br><span class="line">        log.info(<span class="string">&quot;令牌合法，放行&quot;</span>);</span><br><span class="line">        filterChain.doFilter(servletRequest, servletResponse);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>pom.xml</code> 对象 -&gt; json</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.32<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Interceptor-拦截器"><a href="#Interceptor-拦截器" class="headerlink" title="Interceptor 拦截器"></a>Interceptor 拦截器</h3><ul><li><code>LoginCheckInterceptor.java</code></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LoginCheckInterceptor</span> <span class="keyword">implements</span> <span class="title class_">HandlerInterceptor</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">preHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.获取url</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> request.getRequestURL().toString();</span><br><span class="line">        log.info(<span class="string">&quot;请求的url:&#123;&#125;&quot;</span>, url);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.判断url是否包含login</span></span><br><span class="line">        <span class="keyword">if</span> (url.contains(<span class="string">&quot;login&quot;</span>)) &#123;</span><br><span class="line">            log.info(<span class="string">&quot;login操作，放行&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.获取token</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">jwt</span> <span class="operator">=</span> request.getHeader(<span class="string">&quot;token&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4.判断token是否存在</span></span><br><span class="line">        <span class="keyword">if</span> (!StringUtils.hasLength(jwt)) &#123;</span><br><span class="line">            log.info(<span class="string">&quot;token为空，未登录&quot;</span>);</span><br><span class="line">            <span class="type">Result</span> <span class="variable">error</span> <span class="operator">=</span> Result.error(<span class="string">&quot;NOT_LOGIN&quot;</span>);</span><br><span class="line">            <span class="comment">// 对象 -&gt; json</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">notLogin</span> <span class="operator">=</span> JSONObject.toJSONString(error);</span><br><span class="line">            response.getWriter().write(notLogin);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 5.解析token</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            JwtUtils.parseJWT(jwt);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            log.info(<span class="string">&quot;解析jwt失败，返回未登录信息&quot;</span>);</span><br><span class="line">            <span class="type">Result</span> <span class="variable">error</span> <span class="operator">=</span> Result.error(<span class="string">&quot;NOT_LOGIN&quot;</span>);</span><br><span class="line">            <span class="comment">// 对象 -&gt; json</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">notLogin</span> <span class="operator">=</span> JSONObject.toJSONString(error);</span><br><span class="line">            response.getWriter().write(notLogin);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 6.放行数据</span></span><br><span class="line">        log.info(<span class="string">&quot;令牌合法，放行&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>  <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ul><li><code>WebConfig.java</code></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WebConfig</span> <span class="keyword">implements</span> <span class="title class_">WebMvcConfigurer</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> LoginCheckInterceptor loginCheckInterceptor;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addInterceptors</span><span class="params">(InterceptorRegistry registry)</span> &#123;</span><br><span class="line">        registry.addInterceptor(loginCheckInterceptor).addPathPatterns(<span class="string">&quot;/**&quot;</span>).excludePathPatterns(<span class="string">&quot;/login&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="全局异常"><a href="#全局异常" class="headerlink" title="全局异常"></a>全局异常</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestControllerAdvice</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GlobalExceptionHandler</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExceptionHandler(Exception.class)</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">exception</span><span class="params">(Exception exception)</span> &#123;</span><br><span class="line">        exception.printStackTrace();</span><br><span class="line">        <span class="keyword">return</span> Result.error(<span class="string">&quot;操作失败&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="事务管理"><a href="#事务管理" class="headerlink" title="事务管理"></a>事务管理</h2><ul><li><p>service层方法</p><ul><li>方法前打注解，将该方法作为事务<ul><li>所有Exception的异常都会回滚事务</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Transactional(rollbackFor = Exception.class)</span></span><br></pre></td></tr></table></figure><ul><li>新事务</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Transactional(propagation = Propagation.REQUIRES_NEW)</span></span><br></pre></td></tr></table></figure></li><li><p>application.yml</p></li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#spring事务管理日志</span></span><br><span class="line"><span class="attr">logging:</span></span><br><span class="line">  <span class="attr">level:</span></span><br><span class="line">    <span class="attr">org.springframework.jdbc.support.JdbcTransactionManager:</span> <span class="string">debug</span></span><br></pre></td></tr></table></figure><h2 id="AOP"><a href="#AOP" class="headerlink" title="AOP"></a>AOP</h2><ul><li><p>概念术语</p><ul><li>连接点 JoinPoint：可以被AOP控制的方法</li><li>通知 Advice：共性功能</li><li>切入点 PointCut：匹配连接点的条件，通知仅会在切入点 PointCut方法执行时被应用</li><li>切面 Aspect：切入点 PointCut+通知 Advice</li><li>目标对象 Target：通知 Adivce所应用的对象</li></ul></li><li><p>通知类型</p><ul><li><p><code>@Around</code> 环绕通知</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Pointcut(&quot;execution(* com.itheima.service.impl.DeptServiceImpl.*(..))&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">pt</span><span class="params">()</span> &#123;&#125;</span><br><span class="line"><span class="meta">@Around(&quot;pt()&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">around</span><span class="params">(ProceedingJoinPoint joinPoint)</span> <span class="keyword">throws</span> Throwable &#123;</span><br><span class="line">        log.info(<span class="string">&quot;around before...&quot;</span>);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">result</span> <span class="operator">=</span> joinPoint.proceed();</span><br><span class="line">        log.info(<span class="string">&quot;around after...&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li><p><code>@Before</code> 前置通知</p></li><li><p><code>@After</code> 后置通知</p></li><li><p><code>@AfterReturning</code> 返回后通知</p></li><li><p><code>@AfterThrowing</code> 异常后通知</p></li></ul></li><li><p>通知顺序</p><ul><li><p>默认</p><ul><li>目标前的通知方法：字母排名靠前，先执行</li><li>目标后的通知方法：字母排名靠前，后执行</li></ul></li><li><p><code>@Order(数字)</code></p><ul><li>目标前的通知方法：数字小，先执行</li><li>目标后的通知方法：数字小，后执行</li></ul></li><li><p>切入点Pointcut表达式</p><ul><li><code>execution(返回值 包名.类名.方法名(方法参数))</code><ul><li>eg. <code>execution(void com.example.service.impl.DeptServiceImpl.delete(java.lang.Integer))</code></li><li>eg. <code>execution(* com.*.service.*.delete*(*))</code></li><li>eg. <code>execution(* com.example..DeptService.*(..))</code></li></ul></li><li><code>@annotation(com.example.aop.注解名)</code><ul><li>在需要使用的方法前写<code>@注解名</code></li></ul></li></ul></li></ul></li></ul><h3 id="Log记录综合案例"><a href="#Log记录综合案例" class="headerlink" title="Log记录综合案例"></a>Log记录综合案例</h3><h4 id="预操作"><a href="#预操作" class="headerlink" title="预操作"></a>预操作</h4><ul><li><p><code>prom.xml</code>引入</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-aop<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>建数Log据库表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 操作日志表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> operate_log</span><br><span class="line">(</span><br><span class="line">    id            <span class="type">int</span> unsigned <span class="keyword">primary</span> key auto_increment comment <span class="string">&#x27;ID&#x27;</span>,</span><br><span class="line">    operate_user  <span class="type">int</span> unsigned comment <span class="string">&#x27;操作人ID&#x27;</span>,</span><br><span class="line">    operate_time  datetime comment <span class="string">&#x27;操作时间&#x27;</span>,</span><br><span class="line">    class_name    <span class="type">varchar</span>(<span class="number">100</span>) comment <span class="string">&#x27;操作的类名&#x27;</span>,</span><br><span class="line">    method_name   <span class="type">varchar</span>(<span class="number">100</span>) comment <span class="string">&#x27;操作的方法名&#x27;</span>,</span><br><span class="line">    method_params <span class="type">varchar</span>(<span class="number">1000</span>) comment <span class="string">&#x27;方法参数&#x27;</span>,</span><br><span class="line">    return_value  <span class="type">varchar</span>(<span class="number">2000</span>) comment <span class="string">&#x27;返回值&#x27;</span>,</span><br><span class="line">    cost_time     <span class="type">bigint</span> comment <span class="string">&#x27;方法执行耗时, 单位:ms&#x27;</span></span><br><span class="line">) comment <span class="string">&#x27;操作日志表&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li><p>建实体类OperateLog</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.time.LocalDateTime;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OperateLog</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id; <span class="comment">//ID</span></span><br><span class="line">    <span class="keyword">private</span> Integer operateUser; <span class="comment">//操作人ID</span></span><br><span class="line">    <span class="keyword">private</span> LocalDateTime operateTime; <span class="comment">//操作时间</span></span><br><span class="line">    <span class="keyword">private</span> String className; <span class="comment">//操作类名</span></span><br><span class="line">    <span class="keyword">private</span> String methodName; <span class="comment">//操作方法名</span></span><br><span class="line">    <span class="keyword">private</span> String methodParams; <span class="comment">//操作方法参数</span></span><br><span class="line">    <span class="keyword">private</span> String returnValue; <span class="comment">//操作方法返回值</span></span><br><span class="line">    <span class="keyword">private</span> Long costTime; <span class="comment">//操作耗时</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>建立mapper类OperateLogMapper</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.pojo.OperateLog;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Insert;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Mapper;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">OperateLogMapper</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//插入日志数据</span></span><br><span class="line">    <span class="meta">@Insert(&quot;insert into operate_log (operate_user, operate_time, class_name, method_name, method_params, return_value, cost_time) &quot; +</span></span><br><span class="line"><span class="meta">            &quot;values (#&#123;operateUser&#125;, #&#123;operateTime&#125;, #&#123;className&#125;, #&#123;methodName&#125;, #&#123;methodParams&#125;, #&#123;returnValue&#125;, #&#123;costTime&#125;);&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">insert</span><span class="params">(OperateLog log)</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="aop代码"><a href="#aop代码" class="headerlink" title="aop代码"></a>aop代码</h4><ul><li><p><code>Log.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@Target(ElementType.METHOD)</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> Log &#123; &#125;</span><br></pre></td></tr></table></figure></li><li><p><code>LogAspect.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LogAspect</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> HttpServletRequest request;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> OperateLogMapper operateLogMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Around(&quot;@annotation(com.example.anno.Log)&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">recordLog</span><span class="params">(ProceedingJoinPoint joinPoint)</span> <span class="keyword">throws</span> Throwable &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//id -&gt; jwt令牌，解析令牌</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">jwt</span> <span class="operator">=</span> request.getHeader(<span class="string">&quot;token&quot;</span>);</span><br><span class="line">        <span class="type">Claims</span> <span class="variable">claims</span> <span class="operator">=</span> JwtUtils.parseJWT(jwt);</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">operateUser</span> <span class="operator">=</span> (Integer) claims.get(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">        <span class="comment">//时间</span></span><br><span class="line">        <span class="type">LocalDateTime</span> <span class="variable">operateTime</span> <span class="operator">=</span> LocalDateTime.now();</span><br><span class="line">        <span class="comment">//类目</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">className</span> <span class="operator">=</span> joinPoint.getTarget().getClass().getName();</span><br><span class="line">        <span class="comment">//方法名</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">methodName</span> <span class="operator">=</span> joinPoint.getSignature().getName();</span><br><span class="line">        <span class="comment">//方法参数</span></span><br><span class="line">        Object[] args = joinPoint.getArgs();</span><br><span class="line">        <span class="type">String</span> <span class="variable">methodParams</span> <span class="operator">=</span> Arrays.toString(args);</span><br><span class="line"></span><br><span class="line">        <span class="type">long</span> <span class="variable">begin</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">        <span class="comment">//调用原始方法运行</span></span><br><span class="line">        <span class="type">Object</span> <span class="variable">result</span> <span class="operator">=</span> joinPoint.proceed();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//返回值</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">returnValue</span> <span class="operator">=</span> JSONObject.toJSONString(result);</span><br><span class="line">        <span class="comment">//耗时</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">end</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">        <span class="type">long</span> <span class="variable">costTime</span> <span class="operator">=</span> end - begin;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="type">OperateLog</span> <span class="variable">operateLog</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OperateLog</span>(<span class="literal">null</span>, operateUser, operateTime, className, methodName, methodParams, returnValue, costTime);</span><br><span class="line">        operateLogMapper.insert(operateLog);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>在controller层里，需要的Log方法前打备注<code>@Log</code></p></li></ul><hr><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><ul><li>Bean<ul><li>Bean的作用域<ul><li><code>@Scope(&quot;singleton&quot;)</code><ul><li>Bean都是单例的，IoC 容器中只有唯一的 bean 实例。</li></ul></li><li><code>@Scope(&quot;prototype&quot;)</code><ul><li>每次获取都会创建一个新的 bean 实例。</li></ul></li></ul></li></ul></li><li><h2 id="Spring-Boot"><a href="#Spring-Boot" class="headerlink" title="Spring Boot"></a>Spring Boot</h2></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.bilibili.com/video/BV1m84y1w7Tb/?vd_source=33e6dae72e8734d733f973f5e84004b0&quot;&gt;视频&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="notes" scheme="http://example.com/tags/notes/"/>
    
  </entry>
  
</feed>
